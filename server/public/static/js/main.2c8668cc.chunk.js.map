{"version":3,"sources":["services/auth.service.js","pages/Public/Home/Home.jsx","pages/Auth/Login/Login.jsx","pages/Auth/Signup/Signup.jsx","pages/Auth/AccountConfirm/AccountConfirm.jsx","pages/Auth/ForgotPassword/ForgotPassword.jsx","pages/Auth/ResetPassword/ResetPassword.jsx","pages/errors/Error404/Error404.jsx","pages/private/Profile/Profile.jsx","services/games.service.js","services/genres.service.js","services/platforms.service.js","pages/private/Games/Games.jsx","pages/private/Genres/Genres.jsx","pages/private/Platforms/Platforms.jsx","components/Navbar/Navbar.jsx","pages/private/BestRated/BestRated.jsx","pages/private/ComingSoon/ComingSoon.jsx","services/reviews.service.js","components/ReviewTile/ReviewTile.jsx","components/Platforms/Platforms.jsx","pages/private/Reviews/Reviews.jsx","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","username","email","password","service","post","then","response","data","login","confirmAccount","token","forgotPassword","resetPassword","updatePassword","loggedin","get","logout","this","axios","create","baseURL","process","withCredentials","Home","Component","Login","props","state","className","to","href","onSubmit","e","handleFormSubmit","type","name","value","onChange","handleChange","id","htmlFor","error","newState","target","setState","preventDefault","setUser","history","push","catch","withRouter","Signup","AccountConfirm","isActive","undefined","confirmationToken","match","params","status","console","message","updateAccountStatus","ForgotPassword","submitted","err","ResetPassword","isMatch","updated","redirect","resetPasswordToken","setTimeout","checkPasswordToken","Error404","Profile","loggedInUser","GamesService","getGames","limit","offset","a","allGames","getBestRated","order","bestRatedGames","getGameName","gameID","gameName","getGameCover","gameCoverUrl","getReleases","period","fromDays","toDays","from","Math","round","Date","setDate","getDate","allReleases","GenresService","getAllGenres","allGenres","PlatformsService","platforms","Games","gamesService","GameService","genresService","platformsService","pagination","currentPage","genres","games","gamesFiltered","isLoadingGames","isLoadingGenres","renderGenres","renderPlatforms","renderGames","loadGames","nextPage","nextOffset","nextNewGames","newGames","newPagination","genresFiltered","map","genre","key","isLoadingPlatforms","platformsFiltered","platform","_id","length","game","onClick","loadNextGames","Genres","Platform","_isMounted","currentPlatform","allPlatforms","Navbar","handleLogout","authService","nextProps","BestRated","bestRated","rating","toFixed","loadBestRatedGames","ComingSoon","releases7DaysAgo","releases7Days","releases14Days","releases1Month","releases6Months","releases1Year","render7DaysAgo","render7Days","render14Days","render1Month","render6Months","render1Year","statePeriod","released","first_release_date","toDateString","loadReleases","ReviewsService","getReviews","reviews","getReviewsPerPlatform","platformID","reviewsPerPlatform","ReviewTile","isLoadingGameTitle","gameTile","style","coverUrl","totalRating","title","author","loadGameName","loadGameCover","newGameTile","replace","Platforms","checked","log","Reviews","reviewsService","isLoadingReviews","renderReviews","loadReviews","review","App","userObj","currentGenre","fetchUser","userInSession","exact","path","component","loadPlatforms","loadGenres","newPlatforms","newGenres","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c8668cc.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/auth`,\n      withCredentials: true\n    })\n  }\n\n  signup = (username, email, password) => {\n    return this.service.post(\"/signup\", {username, email, password})\n      .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post(\"/login\", {username, password})\n      .then(response => response.data)\n  }\n\n  confirmAccount = (token) => {\n    return this.service.post(`/confirm/${token}`)\n      .then(response => response.data)\n  }\n\n  forgotPassword = (email) => {\n    return this.service.post(\"/forgot-password\", {email})\n      .then(response => response.data)\n  }\n\n  resetPassword = (token) => {\n    return this.service.post(`/reset-password/${token}`)\n      .then(response => response.data)\n  }\n\n  updatePassword = (password, token) => {\n    return this.service.post(`/update-password/${token}`, {password})\n      .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get(\"/currentuser\")\n      .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n      .then(response => response.data)\n  }\n}","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Home page</h1>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthService from './../../../services/auth.service'\nimport {withRouter} from 'react-router'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.service = new AuthService()\n    this.state = {\n      username: '',\n      password: '',\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"login\">\n        <h2>Login</h2>\n        <div className=\"account-question\">\n          <p>Don't you have an account? <Link to={\"/signup\"}>Join us</Link></p>\n\n          {/* TODO: Check routes */}\n          <a href={`${process.env.REACT_APP_SERVER_BASE_URL}/api/auth/facebook`}>Login with Facebook</a>\n          <a href={`${process.env.REACT_APP_SERVER_BASE_URL}/api/auth/google`}>Login With Google</a>\n\n        </div>\n        <form onSubmit={e => this.handleFormSubmit(e)}>\n          <div className=\"field\">\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} id=\"login-username\" className=\"input\"/>\n            <label htmlFor=\"login-username\" className=\"label\">Username</label>\n          </div>\n          <div className=\"field\">\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} id=\"login-password\" className=\"input\"/>\n            <label htmlFor=\"login-password\" className=\"label\">Password</label>\n          </div>\n          <div className=\"form-actions\">\n            <input type=\"submit\" value=\"Login\"/>\n          </div>\n        </form>\n\n        <h4>{this.state.error ? 'Error' : ''}</h4>\n      </section>\n    )\n  }\n\n  handleChange(e) {\n    const newState = {...this.state}\n    newState[e.target.name] = e.target.type === \"number\" ? +e.target.value : e.target.value\n    this.setState(newState)\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault()\n    const {username, password} = this.state\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          username: \"\",\n          password: \"\",\n          error: false\n        })\n        this.props.setUser(response)\n        this.props.history.push(\"/\")\n      })\n      .catch(error => {\n        this.setState({\n          ...this.state,\n          username: username,\n          password: \"\",\n          error: true\n        })\n      })\n  }\n}\n\nexport default withRouter(Login)\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthService from './../../../services/auth.service'\nimport {withRouter} from 'react-router'\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props)\n    this.service = new AuthService()\n    this.state = {\n      username: '',\n      email: '',\n      password: ''\n    }\n  }\n  \n  render() {\n    return (\n      <section className=\"signup\">\n        <h2>Signup</h2>\n        <div className=\"account-question\">\n          <p>Already have an account? <Link to={\"/login\"}>Login</Link></p>\n        </div>\n        <form onSubmit={e => this.handleFormSubmit(e)}>\n          <div className=\"field\">\n            <input type=\"text\" name=\"username\" id=\"username\" onChange={e => this.handleChange(e)} className=\"input\"/>\n            <label htmlFor=\"username\" className=\"label\">Username</label>\n          </div>\n          <div className=\"field\">\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={e => this.handleChange(e)} className=\"input\"/>\n            <label htmlFor=\"email\" className=\"label\">Email</label>\n          </div>\n          <div className=\"field\">\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={e => this.handleChange(e)} className=\"input\"/>\n            <label htmlFor=\"password\" className=\"label\">Password</label>\n          </div>\n          <div className=\"form-actions\">\n            <input type=\"submit\" value=\"Singup\"/>\n          </div>\n        </form>\n        \n        <h4>{this.state.error ? 'Error' : ''}</h4>\n      </section>\n    )\n  }\n\n  handleChange = (e) => {\n    const newState = {...this.state}\n    newState[e.target.name] = e.target.type === \"number\" ? +e.target.value : e.target.value\n    this.setState(newState)\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault()\n    const {username, password, email} = this.state\n    this.service.signup(username, email, password)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          username: \"\",\n          password: \"\",\n          email: \"\",\n          error: false\n        })\n        this.props.setUser(response)\n        this.props.history.push(\"/\")\n      })\n      .catch(error => {\n        this.setState({\n          ...this.state,\n          username: username,\n          password: \"\",\n          email: \"\",\n          error: true\n        })\n      })\n  }\n}\n\nexport default withRouter(Signup)","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"./../../../services/auth.service\";\n\nexport default class AccountConfirm extends Component {\n  constructor(props) {\n    super(props);\n    this.service = new AuthService();\n\n    this.state = {\n      isActive: undefined\n    };\n  }\n\n  render() {\n    return (\n      <section>\n        {this.state.isActive === true && (\n          <>\n            <h3>Account activated!</h3>\n            <Link to={\"/login\"}>Login now!</Link>\n          </>\n        )}\n        {this.state.isActive === false && (\n          <>\n          <h3>The account couldn't be activated</h3>\n          <p>The token to activate your account is incorrect</p>\n          </>\n        )}  \n      </section>\n    );\n  }\n\n  async updateAccountStatus() {\n    try {\n      const { confirmationToken } = this.props.match.params;\n      const checktoken = await this.service.confirmAccount(confirmationToken);\n\n      this.setState({ isActive: true });\n    } catch (err) {\n      const { status, data } = err.response;\n\n      if (status === 404 && data.status === 'CONFIRMATION_USER_NOT_FOUND') {\n        this.setState({ isActive: false });\n      }\n      \n      console.error(err.message);\n    }\n  }\n\n  async componentDidMount() {\n    this.updateAccountStatus(this.props.match.params.confirmationToken);\n  }\n}\n","import React, { Component } from \"react\";\nimport AuthService from \"./../../../services/auth.service\";\n\nexport default class ForgotPassword extends Component {\n  constructor() {\n    super();\n    this.service = new AuthService();\n\n    this.state = {\n      email: \"\",\n      submitted: false\n    };\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n\n    const { email } = this.state;\n    this.service\n      .forgotPassword(email)\n      .then(() => {\n        this.setState({\n          email: \"\",\n          submitted: true,\n        });\n\n      })\n      .catch(err => {\n        const { status, data } = err.response;\n        \n        if (status === 404 && data.status === 'FORGOT-PASSWORD_USER_NOT_FOUND') {\n          this.setState({ email: \"\", submitted: true });\n        }\n        \n        console.error(err.message);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"forgot-password\">\n        <h2>Forgot your password?</h2>\n\n        {!this.state.submitted && (\n          <>\n            <p>\n              Please write down below the e-mail address you registered with\n              Tier\n            </p>\n            <form onSubmit={e => this.handleFormSubmit(e)}>\n              <div className=\"field\">\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  value={this.state.email}\n                  onChange={e => this.handleChange(e)}\n                  className=\"input\"\n                />\n              </div>\n\n              <div className=\"form-actions\">\n                <input type=\"submit\" value=\"Confirm\" />\n              </div>\n            </form>\n          </>\n        )}\n        {this.state.submitted && (\n          <>\n            <h4>\n              If a user with that email exist, a password reset will be e-mailed\n              to you\n            </h4>\n            <small>\n              (Don't forget to check your spam folder or resend the email)\n            </small>\n          </>\n        )}\n      </section>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router';\nimport AuthService from \"./../../../services/auth.service\";\n\nexport default class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.service = new AuthService();\n\n    this.state = {\n      isMatch: undefined,\n      password: \"\",\n      updated: false,\n      redirect: false\n    };\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    this.updatePassword();\n  }\n\n  render() {\n    return (\n      <section>\n        <h2>Reset password</h2>\n\n        {this.state.isMatch === true && !this.state.updated && <h3>Token match!</h3>}\n\n        {!this.state.updated && (\n          <>\n            <h4>Generate a new password</h4>\n\n            <form onSubmit={e => this.handleFormSubmit(e)}>\n              <div className=\"field\">\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={this.state.password}\n                  onChange={e => this.handleChange(e)}\n                  className=\"input\"\n                />\n              </div>\n\n              <div className=\"form-actions\">\n                <input type=\"submit\" value=\"Confirm\" />\n              </div>\n            </form>\n\n            <h4>{this.state.message}</h4>\n            <h4>{this.state.error ? \"Error\" : \"\"}</h4>\n          </>\n        )}\n\n        {this.state.isMatch === false && (\n            <h3>The token to reset your password is incorrect or has expired</h3>\n        )}\n\n        {this.state.updated === true && (\n          <>\n            <h3>Password successfully updated</h3>\n            <span>Please wait...</span>\n          </>\n        )}\n\n        {this.state.redirect && <Redirect to=\"/login\" />}\n      </section>\n    );\n  }\n\n  async checkPasswordToken() {\n    try {\n      const { resetPasswordToken } = this.props.match.params;\n      const checkToken = await this.service.resetPassword(resetPasswordToken);\n\n      this.setState({ isMatch: true, error: false });\n\n    } catch (err) {\n      const { status, data } = err.response;\n\n      if (status === 404 && data.status === \"RESET-PASSWORD_TOKEN_NOT_FOUND_OR_EXPIRED\") {\n        this.setState({ isMatch: false, error: true });\n      }\n\n      console.error(err.message);\n    }\n  }\n\n  async updatePassword() {\n    const { resetPasswordToken } = this.props.match.params;\n    const { password } = this.state;\n\n    try {\n      const response = await this.service.updatePassword(\n        password,\n        resetPasswordToken\n      );\n\n      this.setState({\n        password: \"\",\n        updated: true,\n        error: false\n      });\n\n      setTimeout(() => {\n        this.setState({\n          redirect: true\n        });\n      }, 2500);\n\n    } catch (err) {\n      const { status, data } = err.response;\n        \n        if (status === 500 && data.status === 'UPDATE-PASSWORD_FAILED') {\n          this.setState({ password: \"\", error: true, updated: false });\n        }\n        \n        console.error(err.message);\n    }\n  }\n\n  async componentDidMount() {\n    this.checkPasswordToken(this.props.match.params.resetPasswordToken);\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Error404 extends Component {\n  render() {\n    return (\n      <div>\n        <h1>404 Page not found</h1>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super()\n  }\n\n  render() {\n    return (\n      <div>\n        \n        <h1>User profile</h1>\n        <p><strong>Username: </strong>{this.props.loggedInUser.username} </p>\n      </div>\n    )\n  }\n}\n","import axios from \"axios\";\n\nexport default class GamesService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/games`\n    });\n  }\n\n  getGames = async (limit, offset) => {\n    let allGames = await this.service.get(`?offset=${offset}&limit=${limit}`);\n    return allGames;\n  };\n\n  getBestRated = async (limit, offset, order) => {\n    let bestRatedGames = await this.service.get(`?offset=${offset}&limit=${limit}&sorting=rating&order=${order}`);\n    return bestRatedGames;\n  }\n\n  getGameName = async (gameID) => {\n    let gameName = await this.service.get(`/game-name/${gameID}`)\n    return gameName.data\n  }\n\n  getGameCover = async (gameID) => {\n    let gameCoverUrl = await this.service.get(`/game-cover/${gameID}`)\n    return gameCoverUrl.data\n  }\n  getReleases = async (limit, offset, period, order) => {\n    let from, to;\n    let fromDays, toDays;\n\n    switch (period) {\n      case 1: fromDays = -7;  toDays = 0;   break; // a week ago\n      case 2: fromDays = 0;   toDays = 7;   break; // next week\n      case 3: fromDays = 7;   toDays = 14;  break; // next 2 weeks\n      case 4: fromDays = 14;  toDays = 30;  break; // next 30 days (month)\n      case 5: fromDays = 30;  toDays = 180; break; // next 6 months\n      case 6: fromDays = 180; toDays = 365; break; // next 1 year\n    }\n\n    from = Math.round(new Date().setDate(new Date().getDate() + fromDays) / 1000);\n    to = Math.round(new Date().setDate(new Date().getDate() + toDays) / 1000);\n\n    let allReleases = await this.service.get(\n      `?offset=${offset}&limit=${limit}&from=${from}&to=${to}&sorting=first_release_date&order=${order}`\n    );\n    return allReleases;\n  };\n}\n","import axios from 'axios'\n\nexport default class GenresService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/genres`\n    })\n  }\n\n  getAllGenres = async () => {\n    let allGenres = await this.service.get(\"/\")\n    return allGenres\n  }\n}\n","import axios from \"axios\"\n\nexport default class PlatformsService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/platforms`\n    })\n  }\n\n  platforms = async () => {\n    const platforms = await this.service.get('/')\n    return platforms.data\n  }\n}","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport GameService from './../../../services/games.service'\nimport GenresService from './../../../services/genres.service'\nimport PlatformsService from './../../../services/platforms.service'\n\nexport default class Games extends Component {\n  constructor(props) {\n    super(props)\n\n    this.gamesService = new GameService()\n    this.genresService = new GenresService()\n    this.platformsService = new PlatformsService()\n\n    this.state = {\n      pagination: {\n        limit: 10,\n        offset: 0,\n        currentPage: 0,\n      },\n      genres: props.genres,\n      platforms: props.platforms,\n      games: [],\n      gamesFiltered: [],\n      isLoadingGames: true,\n      isLoadingGenres: true,\n    }\n  }\n  \n  render() {\n    return (\n      <>\n        {this.renderGenres()}\n        {this.renderPlatforms()}\n        {this.renderGames()}\n      </>\n    )\n  }\n\n  componentDidMount() {\n    this.loadGames()\n  }\n\n  async loadGames() {\n    let allGames = await this.gamesService.getGames(this.state.pagination.limit, this.state.pagination.offset)\n    this.setState({\n      ...this.state,\n      games: allGames.data,\n      isLoadingGames: false\n    })\n  }\n\n  async loadNextGames() {\n    this.setState({\n      ...this.state,\n      isLoadingGames: true\n    })\n    \n    let nextPage = this.state.pagination.currentPage + 1\n    let nextOffset = this.state.pagination.limit * nextPage\n    \n    let nextNewGames = await this.gamesService.getGames(this.state.pagination.limit, nextOffset)\n    let newGames = [...this.state.games]\n    let newPagination = {...this.state.pagination}\n    newPagination.offset = nextOffset\n    newPagination.currentPage = nextPage\n    newGames.push(...nextNewGames.data)\n    this.setState({\n      ...this.state,\n      pagination: newPagination,\n      games: newGames,\n      isLoadingGames: false\n    })\n  }\n\n  renderGenres() {\n    return (\n      <section>\n        <h2>Genres</h2>\n        {this.state.genres.isLoadingGenres\n          ?\n            <p>Loading genres...</p>\n          :\n            <form className=\"filter games-filter\">\n              {this.state.genres.genresFiltered.map(genre => {\n                return (\n                  <div className=\"field field-checkbox\" key={genre.id}>\n                    <input type=\"checkbox\" name=\"genre\" id={genre.id}/>\n                    <label htmlFor={genre.id} className=\"checkbox-label\">{genre.name}</label>\n                  </div>\n                )\n              })}\n              <div className=\"form-actions\">\n                <button type=\"submit\">Apply filter</button>\n              </div>\n            </form>\n        }\n      </section>\n    )\n  }\n\n  renderPlatforms() {\n    return (\n      <section>\n        <h2>Platforms</h2>\n          {this.state.platforms.isLoadingPlatforms\n            ?\n              <p>Loading platforms...</p>\n            :\n              <form className=\"filter filter-platforms\">\n                {this.state.platforms.platformsFiltered.map(platform => {\n                  return (\n                    <div className=\"field field-checkbox\" key={platform._id}>\n                      <input type=\"checkbox\" name=\"platform\" id={platform._id}/>\n                      <label htmlFor={platform._id} className=\"checkbox-label\">{platform.name}</label>\n                    </div>\n                  )\n                })}\n            </form>\n          }\n      </section>\n    )\n  }\n\n  renderGames() {\n    return (\n      <section>\n        <h2>Games</h2>\n        <ul className=\"games-list\">\n          {this.state.games.length > 0\n            ? \n              this.state.games.map(game => {\n                return <li key={game.id}>{game.name}</li>\n              })\n            : null\n          }\n        </ul>\n        {this.state.isLoadingGames\n          ?\n            <Link to={\"#\"}>\n              Loading...\n            </Link>\n          :\n            <Link to={\"#\"} onClick={() => this.loadNextGames()}>\n              Load more\n            </Link>\n        }\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport GenresService from './../../../services/genres.service'\n\nexport default class Genres extends Component {\n  constructor() {\n    super()\n    this.service = new GenresService()\n    this.state = {\n      isLoadingGenres: true,\n      genres: []\n    }\n  }\n  \n  render() {\n    return (\n      <section className=\"genres-section\">\n        <h1>Genres</h1>\n        <ul className=\"genres-list\">\n          {this.state.genres.length > 0\n            ?\n              this.state.genres.map(genre => {\n                return <li key={genre.id}>{genre.name}</li>\n              })\n            : null\n          }\n\n          {this.state.isLoadingGenres\n            ?\n              <p to={\"#\"}>Loading...</p>\n            : null\n          }\n        </ul>\n      </section>\n    )\n  }\n\n  async componentDidMount() {\n    let allGenres = await this.service.getAllGenres()\n    this.setState({\n      ...this.state,\n      genres: allGenres.data,\n      isLoadingGenres: false\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport PlatformsService from './../../../services/platforms.service'\n\nexport default class Platform extends Component {\n  constructor(props) {\n    super(props)\n    this.service = new PlatformsService()\n    this._isMounted = false\n    \n    this.state = {\n      platforms: props.platforms.platforms,\n      platformsFiltered: props.platforms.platforms,\n      isLoadingPlatforms: props.platforms.isLoadingPlatforms,\n      currentPlatform: props.platforms.currentPlatform\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Platforms</h1>\n        <ul className=\"platforms-list\">\n        {\n          (this.state.platformsFiltered.length > 0)\n          ? (\n            this.state.platformsFiltered.map(platform => {\n              return <li key={platform._id}>{platform.name}</li>\n            })\n          )\n          : null\n        }\n        </ul>\n      </div>\n    )\n  }\n\n  async componentDidMount() {\n    let allPlatforms = await this.service.platforms()\n    if (this._isMounted) {\n      this.setState({\n        ...this.state,\n        platforms: allPlatforms\n      })\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthService from './../../services/auth.service'\nimport \"./Navbar.scss\"\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {loggedInUser : null}\n    this.authService = new AuthService();\n  }\n  \n  render() {\n    return (\n      <nav className=\"navbar\">\n        <ul className=\"menu\">\n          <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/\"}>Home</Link></li>\n          {!this.state.loggedInUser\n            ? \n              <>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/login\"}>Login</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/signup\"}>Signup</Link></li>\n              </>\n            :\n              <>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/games\"}>Games</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/reviews\"}>Reviews</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/profile\"}>Profile</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/games/coming-soon\"}>Coming Soon</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/logout\"} onClick={this.handleLogout}>Logout</Link></li>\n                {/* <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/games/best-rated\"}>Best rated</Link></li> */}\n                {/* <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/genres\"}>Genres</Link></li> */}\n                {/* <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/platforms\"}>Platforms</Link></li> */}\n              </>\n          }\n        </ul>\n      </nav>\n    )\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      ...this.state,\n      loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = (e) => {\n    this.props.logout()\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport GamesService from \"./../../../services/games.service\";\n\nexport default class BestRated extends Component {\n  constructor() {\n    super();\n    this.service = new GamesService();\n\n    this.state = {\n      bestRated: []\n    };\n  }\n\n  render() {\n    return (\n      <section>\n        <h1>Best rated Games</h1>\n        <ul className=\"best-rated-list\">\n          {this.state.bestRated.length > 0\n            ? this.state.bestRated.map(game => {\n                return (\n                  <li key={game.id}>\n                    {game.name} ({((game.rating * 5) / 100).toFixed(1)})\n                  </li>\n                );\n              })\n            : <p>Loading...</p>\n            }\n        </ul>\n      </section>\n    );\n  }\n\n  async loadBestRatedGames(order = \"desc\") {\n    let bestRatedGames = await this.service.getBestRated(20, 0, order);\n\n    let newState = { ...this.state };\n    newState.bestRated = bestRatedGames.data;\n    this.setState(newState);\n  }\n\n  async componentDidMount() {\n    this.loadBestRatedGames();\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport GamesService from \"./../../../services/games.service\"\n\nexport default class ComingSoon extends Component {\n  constructor() {\n    super();\n    this.service = new GamesService();\n\n    this.state = {\n      releases7DaysAgo: [],\n      releases7Days: [],\n      releases14Days: [],\n      releases1Month: [],\n      releases6Months: [],\n      releases1Year: []\n    };\n  }\n  render() {\n    return (\n      <>\n        <h1>Releases</h1>\n        {this.render7DaysAgo()}\n        {this.render7Days()}\n        {this.render14Days()}\n        {this.render1Month()}\n        {this.render6Months()}\n        {this.render1Year()}\n      </>\n    );\n  }\n\n  async loadReleases(period, statePeriod, order = \"asc\") {\n    let released = await this.service.getReleases(20, 0, period, order)\n\n    let newState = {...this.state}\n    newState[statePeriod] = released.data\n    this.setState(newState)\n  }\n\n  render7DaysAgo () {\n    return (\n      <section>\n        <h2>Recently released</h2>\n        <ul>\n        {this.state.releases7DaysAgo.length > 0\n        ? this.state.releases7DaysAgo.map(game => {\n          return (\n            <li key={game.id}>\n              {`${game.name} (${new Date(game.first_release_date * 1000).toDateString()})`}\n            </li>\n          )\n        })\n        : <p>Loading...</p>\n    }\n      </ul>\n      </section>\n    )\n  }\n\n  render7Days () {\n    return (\n      <section>\n        <h2>Next 7 days</h2>\n        <ul>\n        {this.state.releases7Days.length > 0\n        ? this.state.releases7Days.map(game => {\n          return (\n            <li key={game.id}>\n              {`${game.name} (${new Date(game.first_release_date * 1000).toDateString()})`}\n            </li>\n          )\n        })\n        : <p>Loading...</p>\n    }\n      </ul>\n      </section>\n    )\n  }\n\n  render14Days () {\n    return (\n      <section>\n        <h2>Next 14 days</h2>\n        <ul>\n        {this.state.releases14Days.length > 0\n        ? this.state.releases14Days.map(game => {\n          return (\n            <li key={game.id}>\n              {`${game.name} (${new Date(game.first_release_date * 1000).toDateString()})`}\n            </li>\n          )\n        })\n        : <p>Loading...</p>\n    }\n      </ul>\n      </section>\n    )\n  }\n\n  render1Month () {\n    return (\n      <section>\n        <h2>Next 30 days</h2>\n        <ul>\n        {this.state.releases1Month.length > 0\n        ? this.state.releases1Month.map(game => {\n          return (\n            <li key={game.id}>\n              {`${game.name} (${new Date(game.first_release_date * 1000).toDateString()})`}\n            </li>\n          )\n        })\n        : <p>Loading...</p>\n    }\n      </ul>\n      </section>\n    )\n  }\n\n  render6Months () {\n    return (\n      <section>\n        <h2>Next 6 months</h2>\n        <ul>\n        {this.state.releases6Months.length > 0\n        ? this.state.releases6Months.map(game => {\n          return (\n            <li key={game.id}>\n              {`${game.name} (${new Date(game.first_release_date * 1000).toDateString()})`}\n            </li>\n          )\n        })\n        : <p>Loading...</p>\n    }\n      </ul>\n      </section>\n    )\n  }\n\n  render1Year () {\n    return (\n      <section>\n        <h2>Next year</h2>\n        <ul>\n        {this.state.releases1Year.length > 0\n        ? this.state.releases1Year.map(game => {\n          return (\n            <li key={game.id}>\n              {`${game.name} (${new Date(game.first_release_date * 1000).toDateString()})`}\n            </li>\n          )\n        })\n        : <p>Loading...</p>\n    }\n      </ul>\n      </section>\n    )\n  }\n\n  async componentDidMount() {\n    this.loadReleases(1, \"releases7DaysAgo\", \"desc\")\n    this.loadReleases(2, \"releases7Days\")\n    this.loadReleases(3, \"releases14Days\")\n    this.loadReleases(4, \"releases1Month\")\n    this.loadReleases(5, \"releases6Months\")\n    this.loadReleases(6, \"releases1Year\")\n  }\n}","import axios from 'axios'\n\nexport default class ReviewsService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/reviews`\n    })\n  }\n\n  getReviews = async (offset, limit) => {\n    let reviews = await this.service.get(`?limit=${limit}&offset=${offset}`)\n    return reviews.data\n  }\n\n  getReviewsPerPlatform = async (offset, limit, platformID) => {\n    let reviewsPerPlatform = await this.service.get(`/${platformID}`)\n    return reviewsPerPlatform\n  }\n}\n","import React, { Component } from 'react'\nimport GamesService from '../../services/games.service'\n\nexport default class ReviewTile extends Component {\n  constructor(props) {\n    super(props)\n    this.gamesService = new GamesService()\n    this.state = {\n      isLoadingGameTitle: true,\n      gameTile: this.props.gameTile\n    }\n  }\n  \n  render() {\n    return (\n      <article className=\"review-title\" style={{\"backgroundImage\": `url(http:${this.state.gameTile.coverUrl})`}}>\n        <div>\n          <p>{this.state.gameTile.totalRating}</p>\n          <h2>{this.state.gameTile.title}</h2>\n          {this.state.isLoadingGameTitle\n            ?\n              <p>Loading game title...</p>\n            :\n              <p>{this.state.gameTile.name}</p>\n          }\n          <p>{this.state.gameTile.author.username}</p>\n        </div>\n      </article>\n    )\n  }\n\n  async componentDidMount() {\n    this.loadGameName()\n    this.loadGameCover()\n  }\n\n  async loadGameName () {\n    let gameName = await this.gamesService.getGameName(this.state.gameTile.gameID)\n    let newGameTile = {...this.state.gameTile}\n    newGameTile.name = gameName.name\n    this.setState({\n      ...this.state,\n      gameTile: newGameTile,\n      isLoadingGameTitle: false\n    })\n  }\n\n  async loadGameCover () {\n    let gameCoverUrl = await this.gamesService.getGameCover(this.state.gameTile.gameID)\n    gameCoverUrl = gameCoverUrl.replace('thumb', 'screenshot_med')\n    let newGameTile = {...this.state.gameTile}\n    newGameTile.coverUrl = gameCoverUrl\n    this.setState({\n      ...this.state,\n      gameTile: newGameTile\n    })\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Platforms extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      // isChecked: \"\",\n      platforms: []\n    }\n  }\n\n  handleChange(e) {\n    const { name } = e.target;\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n\n    // const selectedPlatform = this.state.isChecked === \"checked\" ? \"\" : \"checked\"\n      \n    this.setState({\n      [name]: value,\n      // isChecked: selectedPlatform\n    });\n  }\n\n  render() {\n\n    console.log(\"the state is\", this.state)\n\n    return (\n      <div className=\"platforms padding-v-8\">\n          <form>\n            <div className=\"field\">\n              <input\n                type=\"checkbox\"\n                name=\"xbox\"\n                className=\"input\"\n                onChange={e => this.handleChange(e)}\n              />\n              <label htmlFor=\"xbox\">Xbox</label>\n            </div>\n\n            <div className=\"field\">\n              <input\n                type=\"checkbox\"\n                name=\"ps4\"\n                className=\"input\"\n                onChange={e => this.handleChange(e)}\n              />\n              <label htmlFor=\"ps4\">Ps4</label>\n            </div>\n          </form>\n        </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport ReviewsService from \"./../../../services/reviews.service\";\nimport ReviewTile from \"../../../components/ReviewTile/ReviewTile\";\nimport Platforms from \"../../../components/Platforms/Platforms\";\n\nexport default class Reviews extends Component {\n  constructor(props) {\n    super();\n    this.reviewsService = new ReviewsService();\n    this.state = {\n      reviews: [],\n      isLoadingReviews: true\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        {console.log(\"Rendering\", this.state.reviews)}\n        {this.renderReviews()}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.loadReviews(0, 10);\n  }\n\n  async loadReviews(offset, limit) {\n    let reviews = await this.reviewsService.getReviews(offset, limit);\n    console.log(\"Reviews loaded...\", reviews);\n    this.setState({\n      ...this.state,\n      reviews: reviews,\n      isLoadingReviews: false\n    });\n  }\n\n  renderReviews() {\n    return (\n      <section>\n        <h2>Reviews</h2>\n\n        <Platforms />\n        <ul>\n          {this.state.reviews.length > 0\n            ? this.state.reviews.map(review => {\n                return <ReviewTile key={review._id} gameTile={review} />;\n              })\n            : null}\n        </ul>\n        {this.state.isLoadingReviews ? <p>Loading...</p> : <p>Load more</p>}\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport {Link} from 'react-router-dom'\nimport AuthService from \"./services/auth.service\";\n\n// Pages\nimport Home from \"./pages/Public/Home/Home\";\nimport Login from \"./pages/Auth/Login/Login\";\nimport Signup from \"./pages/Auth/Signup/Signup\";\nimport AccountConfirm from \"./pages/Auth/AccountConfirm/AccountConfirm\"\nimport ForgotPassword from \"./pages/Auth/ForgotPassword/ForgotPassword\";\nimport ResetPassword from \"./pages/Auth/ResetPassword/ResetPassword\";\nimport Error404 from \"./pages/errors/Error404/Error404\";\nimport Profile from \"./pages/private/Profile/Profile\";\nimport Games from \"./pages/private/Games/Games\";\nimport Genres from \"./pages/private/Genres/Genres\";\nimport Platforms from \"./pages/private/Platforms/Platforms\";\n\n// Components\nimport Navbar from \"./components/Navbar/Navbar\";\nimport BestRated from \"./pages/private/BestRated/BestRated\";\nimport ComingSoon from \"./pages/private/ComingSoon/ComingSoon\";\nimport Reviews from \"./pages/private/Reviews/Reviews\";\n\n// Services\nimport ReviewsService from \"./services/reviews.service\";\nimport PlatformsService from \"./services/platforms.service\";\nimport GenresService from \"./services/genres.service\";\n\n\n// Styles\n// import \"./scss/main.scss\"\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.authService = new AuthService();\n    this.reviewsService = new ReviewsService()\n    this.platformsService = new PlatformsService()\n    this.genresService = new GenresService()\n\n    this.state = {\n      loggedInUser: null,\n      platforms: {\n        isLoadingPlatforms: true,\n        platforms: [],\n        platformsFiltered: [],\n        currentPlatform: null\n      },\n      genres: {\n        isLoadingGenres: true,\n        genres: [],\n        genresFiltered: [],\n        currentGenre: null\n      }\n    };\n    this.fetchUser();\n  }\n\n  render() {\n    return (\n      <div>\n        <Switch></Switch>\n        <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          {this.state.loggedInUser ? (\n            <>\n              <Route\n                exact\n                path=\"/games\"\n                component={() => (\n                  <Games genres={this.state.genres} platforms={this.state.platforms} loggedInUser={this.state.loggedInUser} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/profile\"\n                component={() => (\n                  <Profile loggedInUser={this.state.loggedInUser} />\n                )}\n              />\n              <Route exact path=\"/genres\" component={() => <Genres genres={this.state.genres} loggedInUser={this.state.loggedInUser} />} />\n              <Route exact path=\"/games/best-rated\" component={() => <BestRated loggedInUser={this.state.loggedInUser} />} />\n              <Route\n                exact\n                path=\"/games/coming-soon\"\n                component={() => (\n                  <ComingSoon loggedInUser={this.state.loggedInUser} />\n                )}\n              />\n              <Route exact path=\"/reviews\" component={() => <Reviews platforms={this.state.platforms} loggedInUser={this.state.loggedInUser} />} />\n              <Route exact path=\"/platforms\" component={() => <Platforms platforms={this.state.platforms} loggedInUser={this.state.loggedInUser} />} />\n            </>\n          ) : (\n            <>\n              <Route\n                exact\n                path=\"/login\"\n                component={() => <Login setUser={this.setUser} />}\n              />\n              <Route\n                exact\n                path=\"/signup\"\n                component={() => <Signup setUser={this.setUser} />}\n              />\n              <Route\n                exact\n                path=\"/forgot-password\"\n                component={ForgotPassword}\n              />\n              <Route\n                exact\n                path=\"/reset-password/:resetPasswordToken\"\n                component={ResetPassword}\n              />\n              <Route\n                exact\n                path=\"/update-password/:resetPasswordToken\"\n                component={ResetPassword}\n              />\n              <Route\n                exact\n                path=\"/confirm/:confirmationToken\"\n                component={AccountConfirm}\n              />\n            </>\n          )}\n          <Route exact component={Error404} />\n        </Switch>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.loadPlatforms()\n    this.loadGenres()\n  }\n\n  async loadPlatforms() {\n    let platforms = await this.platformsService.platforms()\n    let newPlatforms = {...this.state.platforms}\n    newPlatforms.isLoadingPlatforms = false\n    newPlatforms.platforms = platforms\n    newPlatforms.platformsFiltered = platforms\n    console.log(\"Platforms loaded\", newPlatforms)\n    this.setState({\n      ...this.state,\n      platforms: newPlatforms\n    })\n  }\n\n  async loadGenres() {\n    let genres = await this.genresService.getAllGenres()\n    let newGenres = {...this.state.genres}\n    newGenres.isLoadingGenres = false\n    newGenres.genres = genres.data\n    newGenres.genresFiltered = genres.data\n    this.setState({\n      ...this.state,\n      genres: newGenres\n    })\n  }\n\n  fetchUser() {\n    return this.authService\n      .loggedin()\n      .then(response => {\n        this.setState({\n          ...this.state,\n          loggedInUser: response\n        });\n      })\n      .catch(error => {\n        this.setState({\n          ...this.state,\n          loggedInUser: false\n        });\n      });\n  }\n\n  setUser = userObj => {\n    this.setState({\n      ...this.state,\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    this.authService.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}