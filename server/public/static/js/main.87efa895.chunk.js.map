{"version":3,"sources":["services/auth.service.js","pages/Public/Home/Home.jsx","pages/Auth/Login/Login.jsx","pages/Auth/Signup/Signup.jsx","pages/Auth/AccountConfirm/AccountConfirm.jsx","pages/Auth/ForgotPassword/ForgotPassword.jsx","pages/Auth/ResetPassword/ResetPassword.jsx","services/profile.service.js","pages/errors/Error404/Error404.jsx","services/reviews.service.js","services/games.service.js","components/ReviewTile/ReviewTile.jsx","pages/private/Profile/Profile.jsx","pages/private/LoggedInUserProfile/LoggedInUserProfile.jsx","services/genres.service.js","services/platforms.service.js","components/PlatformTag/PlatformTag.jsx","components/PlatformsTags/PlatformsTags.jsx","components/GenreTag/GenreTag.jsx","components/GenresTags/GenresTags.jsx","pages/private/Platforms/Platforms.jsx","pages/private/Games/Games.jsx","pages/private/Genres/Genres.jsx","pages/private/Reviews/CreateReview/CreateReview.jsx","pages/private/Game/Game.jsx","services/reviewComments.service.js","pages/private/Reviews/Review/Review.jsx","pages/private/Saved/Saved.jsx","pages/private/Room/Room.jsx","components/Navbar/Navbar.jsx","pages/private/BestRated/BestRated.jsx","pages/private/ComingSoon/ComingSoon.jsx","pages/private/Reviews/Reviews.jsx","components/SearchBar/SearchBar.jsx","services/search.service.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","username","email","password","service","post","then","response","data","login","confirmAccount","token","forgotPassword","resetPassword","updatePassword","loggedin","get","logout","this","axios","create","baseURL","process","withCredentials","Home","Component","Login","props","state","className","to","href","onSubmit","e","handleFormSubmit","type","name","value","onChange","handleChange","id","htmlFor","error","newState","target","setState","preventDefault","setUser","history","push","catch","withRouter","Signup","AccountConfirm","isActive","undefined","confirmationToken","match","params","status","console","message","updateAccountStatus","ForgotPassword","submitted","err","ResetPassword","isMatch","updated","redirect","resetPasswordToken","setTimeout","checkPasswordToken","ProfileService","getProfile","a","userProfile","follow","followed","follower","put","followRequest","unfollow","unfollowRequest","ReviewsService","getReviewData","reviewID","reviewData","getReviews","offset","limit","reviews","getReviewsPerUser","userID","reviewsPerUser","getReviewsPerPlatform","platformID","reviewsPerPlatform","getReviewsPerGame","gameID","reviewsPerGame","deleteReview","delete","deletedReview","getRelationatedReviews","currentReviewID","relationatedReviews","createReview","reviewCreated","followerID","reviewFollowRequest","reviewUnfollowRequest","GamesService","getGames","allGames","getBestRated","order","bestRatedGames","getGameName","gameName","getGameCover","gameCoverUrl","getReleases","period","fromDays","toDays","from","Math","round","Date","setDate","getDate","allReleases","getGameData","gameData","getGamesPerGenre","genre","gamesPerGenre","getGamesPerPlatform","platforms","gamesPerPlatform","getGamesPerPlatformAndGenre","genres","gamesPerPlatformAndGenre","gateRelatedGames","relatedGamesArray","relatedGames","getAlternativeNames","alternativeNames","getRelationedContent","collectionID","relationedContent","getInvolvedCompanies","companies","involvedCompanies","getReleaseDates","releaseID","releaseDates","getWebsites","websitesID","websites","ReviewTile","gamesService","isLoadingGameTitle","gameTile","style","coverUrl","totalRating","title","author","loadGameName","loadGameCover","newGameTile","replace","Profile","profileService","reviewsService","isLoadingUserProfile","userReviews","isLoadingUserReviews","renderUserProfile","renderUserReviews","loadUserProfile","followers","indexOf","loggedInUser","_id","onClick","handleUnfollowUser","handleFollowUser","length","map","review","key","newUserProfile","alert","unfollowed","loadUserReviews","LoggedInUserProfile","renderFollowers","following","renderFollowing","userFollowed","GenresService","getAllGenres","allGenres","PlatformsService","PlatformTag","platform","checked","inputNameAttr","PlatformsTags","platformsSelected","selectedPlatforms","newPlatformsSelected","pop","handlePlatformFilterChange","includes","GenreTag","GenresTags","genresSelected","selectedGenres","newGenresSelected","genreSelected","handleGenreFilterChange","Platform","_isMounted","platformsFiltered","isLoadingPlatforms","currentPlatform","allPlatforms","Games","onGenreFilterChange","platformFilter","onPlatformFilterChange","GameService","genresService","platformsService","queryParams","queryString","parse","window","location","search","pagination","currentPage","games","renderFilters","renderGames","isLoadingGames","nextPage","nextOffset","nextNewGames","newGames","newPagination","isLoadingGenres","currentGenre","onFilterApply","game","loadNextGames","Genres","CreateReview","content","rating","graphics","sound","gameplay","pros","cons","isLoadingGameName","handleCreateReviewFormSubmit","disabled","placeholder","handleInputChange","handleSelectInputChange","created","category","Game","isLoadingGame","log","savedGames","handleFollowRequest","handleUnfollowRequest","renderGame","loadGame","nextProps","renderHeader","renderIAmFollowing","summary","renderSummary","storyline","renderStoryLine","game_modes","renderGameModes","renderGameGenres","screenshots","renderScreenshots","videos","renderVideos","release_dates","renderReleaseDates","renderWebsites","similar_games","renderSimilarGames","cover","src","url","alt","renderPlatforms","total_rating","toFixed","slug","gameMode","involved_companies","company","screenshot","video","width","height","video_id","frameBorder","allow","allowFullScreen","format","first_release_date","releaseDate","date","website","similarGame","reRender","ReviewCommentsService","loadComments","comments","addComment","comment","makeCommentResult","Review","reviewCommentsService","isLoadingReview","authorID","loggedInUserID","isLoadingComments","renderReview","loadReviewData","newComments","pagcurrentPage","loggedInUserName","handleUnfollowReview","handleFollowReview","renderComments","handleCommentChange","reviewFollowRequestDone","newReview","reviewFollow","reviewUnfollowRequestDone","newComment","commentAdded","commentCreated","unshift","Saved","savedReviews","isLoadingSavedReviews","isLoadingSavedGames","renderSavedReviews","loadSavedReviews","savedReview","Room","socket","io","currentOnlineUsers","messages","onlineUser","idx","emit","room","on","newMessages","off","Navbar","handleLogout","authService","BestRated","bestRated","ComingSoon","releases","render7DaysAgo","render7Days","render14Days","render1Month","render6Months","render1Year","releases7DaysAgo","isLoading7DaysAgo","release","toDateString","releases7Days","isLoading7Days","releases14Days","isLoading14Days","releases1Month","isLoading1Month","releases6Months","isLoading6Months","releases1Year","isLoading1Year","Reviews","renderNewReviewLink","renderReviews","isLoadingReviews","reviewsFiltered","handleLoadMore","SearchBar","hasFocus","handleSearchSubmit","autoComplete","updateSearchText","onFocus","openSearchResults","closeSearchResults","renderSearchResults","makeSearch","renderGamesResults","renderReviewsResults","renderUsersResults","isSearchingGames","gamesResults","gameResult","isSearchingReviews","reviewsResults","reviewResult","users","isSearchingUsers","usersResults","userResult","SearchService","makeGamesSearch","searchText","gamesSearchResults","makeReviewsSearch","reviewsSearchResults","makeUsersSearch","usersSearchResults","App","userObj","searchService","genresFiltered","gamesFiltered","currentGame","isLoadingBestRated","currentReviewFilter","isSearching","fetchUser","routes","exact","path","component","platformsFilter","genresFilter","applyGameFilter","render","loadReviews","userInSession","text","route","loadPlatforms","loadGenres","loadGames","gameFollowRequestDone","updatedLoggedInUser","gameUnfollowRequestDone","newLoggedInUser","newPlatforms","newGenres","newReviews","concat","newSearch","statePeriod","isLoadingKey","released","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87efa895.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/auth`,\n      withCredentials: true\n    })\n  }\n\n  signup = (username, email, password) => {\n    return this.service.post(\"/signup\", {username, email, password})\n      .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post(\"/login\", {username, password})\n      .then(response => response.data)\n  }\n\n  confirmAccount = (token) => {\n    return this.service.post(`/confirm/${token}`)\n      .then(response => response.data)\n  }\n\n  forgotPassword = (email) => {\n    return this.service.post(\"/forgot-password\", {email})\n      .then(response => response.data)\n  }\n\n  resetPassword = (token) => {\n    return this.service.post(`/reset-password/${token}`)\n      .then(response => response.data)\n  }\n\n  updatePassword = (password, token) => {\n    return this.service.post(`/update-password/${token}`, {password})\n      .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get(\"/currentuser\")\n      .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n      .then(response => response.data)\n  }\n}","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Home page</h1>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthService from './../../../services/auth.service'\nimport {withRouter} from 'react-router'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.service = new AuthService()\n    this.state = {\n      username: '',\n      password: '',\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"login\">\n        <h2>Login</h2>\n        <div className=\"account-question\">\n          <p>Don't you have an account? <Link to={\"/signup\"}>Join us</Link></p>\n\n          {/* TODO: Check routes */}\n          <a href={`${process.env.REACT_APP_SERVER_BASE_URL}/api/auth/facebook`}>Login with Facebook</a>\n          <a href={`${process.env.REACT_APP_SERVER_BASE_URL}/api/auth/google`}>Login With Google</a>\n\n        </div>\n        <form onSubmit={e => this.handleFormSubmit(e)}>\n          <div className=\"field\">\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} id=\"login-username\" className=\"input\"/>\n            <label htmlFor=\"login-username\" className=\"label\">Username</label>\n          </div>\n          <div className=\"field\">\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} id=\"login-password\" className=\"input\"/>\n            <label htmlFor=\"login-password\" className=\"label\">Password</label>\n          </div>\n          <div className=\"form-actions\">\n            <input type=\"submit\" value=\"Login\"/>\n          </div>\n        </form>\n\n        <h4>{this.state.error ? 'Error' : ''}</h4>\n      </section>\n    )\n  }\n\n  handleChange(e) {\n    const newState = {...this.state}\n    newState[e.target.name] = e.target.type === \"number\" ? +e.target.value : e.target.value\n    this.setState(newState)\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault()\n    const {username, password} = this.state\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          username: \"\",\n          password: \"\",\n          error: false\n        })\n        this.props.setUser(response)\n        this.props.history.push(\"/\")\n      })\n      .catch(error => {\n        this.setState({\n          ...this.state,\n          username: username,\n          password: \"\",\n          error: true\n        })\n      })\n  }\n}\n\nexport default withRouter(Login)\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthService from './../../../services/auth.service'\nimport {withRouter} from 'react-router'\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props)\n    this.service = new AuthService()\n    this.state = {\n      username: '',\n      email: '',\n      password: ''\n    }\n  }\n  \n  render() {\n    return (\n      <section className=\"signup\">\n        <h2>Signup</h2>\n        <div className=\"account-question\">\n          <p>Already have an account? <Link to={\"/login\"}>Login</Link></p>\n        </div>\n        <form onSubmit={e => this.handleFormSubmit(e)}>\n          <div className=\"field\">\n            <input type=\"text\" name=\"username\" id=\"username\" onChange={e => this.handleChange(e)} className=\"input\"/>\n            <label htmlFor=\"username\" className=\"label\">Username</label>\n          </div>\n          <div className=\"field\">\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={e => this.handleChange(e)} className=\"input\"/>\n            <label htmlFor=\"email\" className=\"label\">Email</label>\n          </div>\n          <div className=\"field\">\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={e => this.handleChange(e)} className=\"input\"/>\n            <label htmlFor=\"password\" className=\"label\">Password</label>\n          </div>\n          <div className=\"form-actions\">\n            <input type=\"submit\" value=\"Singup\"/>\n          </div>\n        </form>\n        \n        <h4>{this.state.error ? 'Error' : ''}</h4>\n      </section>\n    )\n  }\n\n  handleChange = (e) => {\n    const newState = {...this.state}\n    newState[e.target.name] = e.target.type === \"number\" ? +e.target.value : e.target.value\n    this.setState(newState)\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault()\n    const {username, password, email} = this.state\n    this.service.signup(username, email, password)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          username: \"\",\n          password: \"\",\n          email: \"\",\n          error: false\n        })\n        this.props.setUser(response)\n        this.props.history.push(\"/\")\n      })\n      .catch(error => {\n        this.setState({\n          ...this.state,\n          username: username,\n          password: \"\",\n          email: \"\",\n          error: true\n        })\n      })\n  }\n}\n\nexport default withRouter(Signup)","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"./../../../services/auth.service\";\n\nexport default class AccountConfirm extends Component {\n  constructor(props) {\n    super(props);\n    this.service = new AuthService();\n\n    this.state = {\n      isActive: undefined\n    };\n  }\n\n  render() {\n    return (\n      <section>\n        {this.state.isActive === true && (\n          <>\n            <h3>Account activated!</h3>\n            <Link to={\"/login\"}>Login now!</Link>\n          </>\n        )}\n        {this.state.isActive === false && (\n          <>\n          <h3>The account couldn't be activated</h3>\n          <p>The token to activate your account is incorrect</p>\n          </>\n        )}  \n      </section>\n    );\n  }\n\n  async updateAccountStatus() {\n    try {\n      const { confirmationToken } = this.props.match.params;\n      const checktoken = await this.service.confirmAccount(confirmationToken);\n\n      this.setState({ isActive: true });\n    } catch (err) {\n      const { status, data } = err.response;\n\n      if (status === 404 && data.status === 'CONFIRMATION_USER_NOT_FOUND') {\n        this.setState({ isActive: false });\n      }\n      \n      console.error(err.message);\n    }\n  }\n\n  async componentDidMount() {\n    this.updateAccountStatus(this.props.match.params.confirmationToken);\n  }\n}\n","import React, { Component } from \"react\";\nimport AuthService from \"./../../../services/auth.service\";\n\nexport default class ForgotPassword extends Component {\n  constructor() {\n    super();\n    this.service = new AuthService();\n\n    this.state = {\n      email: \"\",\n      submitted: false\n    };\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n\n    const { email } = this.state;\n    this.service\n      .forgotPassword(email)\n      .then(() => {\n        this.setState({\n          email: \"\",\n          submitted: true,\n        });\n\n      })\n      .catch(err => {\n        const { status, data } = err.response;\n        \n        if (status === 404 && data.status === 'FORGOT-PASSWORD_USER_NOT_FOUND') {\n          this.setState({ email: \"\", submitted: true });\n        }\n        \n        console.error(err.message);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"forgot-password\">\n        <h2>Forgot your password?</h2>\n\n        {!this.state.submitted && (\n          <>\n            <p>\n              Please write down below the e-mail address you registered with\n              Tier\n            </p>\n            <form onSubmit={e => this.handleFormSubmit(e)}>\n              <div className=\"field\">\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"email\"\n                  value={this.state.email}\n                  onChange={e => this.handleChange(e)}\n                  className=\"input\"\n                />\n              </div>\n\n              <div className=\"form-actions\">\n                <input type=\"submit\" value=\"Confirm\" />\n              </div>\n            </form>\n          </>\n        )}\n        {this.state.submitted && (\n          <>\n            <h4>\n              If a user with that email exist, a password reset will be e-mailed\n              to you\n            </h4>\n            <small>\n              (Don't forget to check your spam folder or resend the email)\n            </small>\n          </>\n        )}\n      </section>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router';\nimport AuthService from \"./../../../services/auth.service\";\n\nexport default class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.service = new AuthService();\n\n    this.state = {\n      isMatch: undefined,\n      password: \"\",\n      updated: false,\n      redirect: false\n    };\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    this.updatePassword();\n  }\n\n  render() {\n    return (\n      <section>\n        <h2>Reset password</h2>\n\n        {this.state.isMatch === true && !this.state.updated && <h3>Token match!</h3>}\n\n        {!this.state.updated && (\n          <>\n            <h4>Generate a new password</h4>\n\n            <form onSubmit={e => this.handleFormSubmit(e)}>\n              <div className=\"field\">\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={this.state.password}\n                  onChange={e => this.handleChange(e)}\n                  className=\"input\"\n                />\n              </div>\n\n              <div className=\"form-actions\">\n                <input type=\"submit\" value=\"Confirm\" />\n              </div>\n            </form>\n\n            <h4>{this.state.message}</h4>\n            <h4>{this.state.error ? \"Error\" : \"\"}</h4>\n          </>\n        )}\n\n        {this.state.isMatch === false && (\n            <h3>The token to reset your password is incorrect or has expired</h3>\n        )}\n\n        {this.state.updated === true && (\n          <>\n            <h3>Password successfully updated</h3>\n            <span>Please wait...</span>\n          </>\n        )}\n\n        {this.state.redirect && <Redirect to=\"/login\" />}\n      </section>\n    );\n  }\n\n  async checkPasswordToken() {\n    try {\n      const { resetPasswordToken } = this.props.match.params;\n      const checkToken = await this.service.resetPassword(resetPasswordToken);\n\n      this.setState({ isMatch: true, error: false });\n\n    } catch (err) {\n      const { status, data } = err.response;\n\n      if (status === 404 && data.status === \"RESET-PASSWORD_TOKEN_NOT_FOUND_OR_EXPIRED\") {\n        this.setState({ isMatch: false, error: true });\n      }\n\n      console.error(err.message);\n    }\n  }\n\n  async updatePassword() {\n    const { resetPasswordToken } = this.props.match.params;\n    const { password } = this.state;\n\n    try {\n      const response = await this.service.updatePassword(\n        password,\n        resetPasswordToken\n      );\n\n      this.setState({\n        password: \"\",\n        updated: true,\n        error: false\n      });\n\n      setTimeout(() => {\n        this.setState({\n          redirect: true\n        });\n      }, 2500);\n\n    } catch (err) {\n      const { status, data } = err.response;\n        \n        if (status === 500 && data.status === 'UPDATE-PASSWORD_FAILED') {\n          this.setState({ password: \"\", error: true, updated: false });\n        }\n        \n        console.error(err.message);\n    }\n  }\n\n  async componentDidMount() {\n    this.checkPasswordToken(this.props.match.params.resetPasswordToken);\n  }\n}\n","import axios from 'axios'\n\nexport default class ProfileService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/profile`\n    })\n  }\n  \n  getProfile = async (username) => {\n    let userProfile = await this.service.get(`/${username}`)\n    return userProfile.data\n  }\n\n  follow = async (followed, follower) => {\n    let followRequest = await this.service.put(\"/follow\", { followed, follower })\n    return followRequest.data\n  }\n\n  unfollow = async (followed, follower) => {\n    let unfollowRequest = await this.service.put(\"/unfollow\", { followed, follower })\n    return unfollowRequest.data\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Error404 extends Component {\n  render() {\n    return (\n      <div>\n        <h1>404 Page not found</h1>\n      </div>\n    )\n  }\n}\n","import axios from 'axios'\n\nexport default class ReviewsService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/reviews`\n    })\n  }\n\n  getReviewData = async (reviewID) => {\n    let reviewData = await this.service.get(`/${reviewID}`)\n    return reviewData.data\n  }\n\n  getReviews = async (offset, limit) => {\n    let reviews = await this.service.get(`?limit=${limit}&offset=${offset}`)\n    return reviews.data\n  }\n\n  getReviewsPerUser = async (userID) => {\n    let reviewsPerUser = await this.service.get(`/user/${userID}`)\n    return reviewsPerUser.data\n  }\n\n  getReviewsPerPlatform = async (offset, limit, platformID) => {\n    let reviewsPerPlatform = await this.service.get(`/${platformID}`)\n    return reviewsPerPlatform\n  }\n\n  getReviewsPerGame = async (gameID) => {\n    let reviewsPerGame = await this.service.get(`/game/${gameID}`)\n    return reviewsPerGame.data\n  }\n\n  deleteReview = async (reviewID) => {\n    let deletedReview = await this.service.delete(`/delete/${reviewID}`)\n    return deletedReview.data\n  }\n\n  getRelationatedReviews = async (gameID, currentReviewID) => {\n    let relationatedReviews = await this.service.get(`/relationated/${gameID}/${currentReviewID}`)\n    return relationatedReviews.data\n  }\n\n  createReview = async (reviewData) => {\n    let reviewCreated = await this.service.post('/add', reviewData)\n    return reviewCreated.data\n  }\n\n  follow = async (reviewID, followerID) => {\n    let reviewFollowRequest = await this.service.put(\"/follow\", { reviewID, followerID })\n    return reviewFollowRequest.data\n  }\n\n  unfollow = async (reviewID, followerID) => {\n    let reviewUnfollowRequest = await this.service.put(\"/unfollow\", { reviewID, followerID })\n    return reviewUnfollowRequest.data\n  }\n}\n","import axios from \"axios\";\n\nexport default class GamesService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/games`\n    });\n  }\n\n  getGames = async (limit, offset) => {\n    let allGames = await this.service.get(`?offset=${offset}&limit=${limit}`);\n    return allGames;\n  };\n\n  follow = async (gameID, followerID) => {\n    let followRequest = await this.service.put(\"/follow\", { gameID, followerID })\n    return followRequest.data\n  }\n\n  unfollow = async (gameID, followerID) => {\n    let unfollowRequest = await this.service.put(\"/unfollow\", { gameID, followerID })\n    return unfollowRequest.data\n  }\n\n  getBestRated = async (limit, offset, order) => {\n    let bestRatedGames = await this.service.get(`?offset=${offset}&limit=${limit}&sorting=rating&order=${order}`);\n    return bestRatedGames;\n  }\n\n  getGameName = async (gameID) => {\n    let gameName = await this.service.get(`/game-name/${gameID}`)\n    return gameName.data\n  }\n\n  getGameCover = async (gameID) => {\n    let gameCoverUrl = await this.service.get(`/game-cover/${gameID}`)\n    return gameCoverUrl.data\n  }\n\n  getReleases = async (limit, offset, period, order) => {\n    let from, to;\n    let fromDays, toDays;\n\n    switch (period) {\n      case 1: fromDays = -7;  toDays = 0;   break; // a week ago\n      case 2: fromDays = 0;   toDays = 7;   break; // next week\n      case 3: fromDays = 7;   toDays = 14;  break; // next 2 weeks\n      case 4: fromDays = 14;  toDays = 30;  break; // next 30 days (month)\n      case 5: fromDays = 30;  toDays = 180; break; // next 6 months\n      case 6: fromDays = 180; toDays = 365; break; // next 1 year\n    }\n\n    from = Math.round(new Date().setDate(new Date().getDate() + fromDays) / 1000);\n    to = Math.round(new Date().setDate(new Date().getDate() + toDays) / 1000);\n\n    let allReleases = await this.service.get(\n      `?offset=${offset}&limit=${limit}&from=${from}&to=${to}&sorting=first_release_date&order=${order}`\n    );\n    return allReleases;\n  };\n\n  getGameData = async (gameID) => {\n    let gameData = await this.service.get(`/${gameID}`)\n    return gameData.data\n  }\n\n  getGamesPerGenre = async (genre) => {\n    let gamesPerGenre = await this.service.get(`/?genres=${genre}`)\n    return gamesPerGenre.data\n  }\n\n  getGamesPerPlatform = async (platforms) => {\n    let gamesPerPlatform = await this.service.get(`/?platforms=${platforms}`)\n    return gamesPerPlatform.data\n  }\n\n  getGamesPerPlatformAndGenre = async (limit, offset, platforms, genres) => {\n    let gamesPerPlatformAndGenre = await this.service.get(`/?platforms=${platforms}&genres=${genres}&offset=${offset}&limit=${limit}`)\n    return gamesPerPlatformAndGenre.data\n  }\n\n  gateRelatedGames = async (relatedGamesArray) => {\n    let relatedGames = await this.service.get(`/related/${relatedGamesArray}`)\n    return relatedGames.data\n  }\n\n  getAlternativeNames = async (gameID) => {\n    let alternativeNames = await this.service.get(`/alternative-names/${gameID}`)\n    return alternativeNames.data\n  }\n\n  getRelationedContent = async (collectionID) => {\n    let relationedContent = await this.service.get(`/related-content/${collectionID}`)\n    return relationedContent.data\n  }\n\n  getInvolvedCompanies = async (companies) => {\n    let involvedCompanies = await this.service.get(`/involved-companies/${companies}`)\n    return involvedCompanies.data\n  }\n\n  getReleaseDates = async (releaseID) => {\n    let releaseDates = await this.service.get(`/release-dates/${releaseID}`)\n    return releaseDates.data\n  }\n\n  getWebsites = async (websitesID) => {\n    let websites = await this.service.get(`/websites/${websitesID}`)\n    return websites.data\n  }\n}\n","import React, { Component } from 'react'\nimport GamesService from '../../services/games.service'\n\nexport default class ReviewTile extends Component {\n  constructor(props) {\n    super(props)\n    this.gamesService = new GamesService()\n    this.state = {\n      isLoadingGameTitle: true,\n      gameTile: this.props.gameTile\n    }\n  }\n  \n  render() {\n    return (\n      <article className=\"review-title\" style={{\"backgroundImage\": `url(http:${this.state.gameTile.coverUrl})`}}>\n        <div>\n          <p>{this.state.gameTile.totalRating}</p>\n          <h2>{this.state.gameTile.title}</h2>\n          {this.state.isLoadingGameTitle\n            ?\n              <p>Loading game title...</p>\n            :\n              <p>{this.state.gameTile.name}</p>\n          }\n          <p>{this.state.gameTile.author.username}</p>\n        </div>\n      </article>\n    )\n  }\n\n  async componentDidMount() {\n    this.loadGameName()\n    this.loadGameCover()\n  }\n\n  async loadGameName () {\n    let gameName = await this.gamesService.getGameName(this.state.gameTile.gameID)\n    let newGameTile = {...this.state.gameTile}\n    newGameTile.name = gameName.name\n    this.setState({\n      ...this.state,\n      gameTile: newGameTile,\n      isLoadingGameTitle: false\n    })\n  }\n\n  async loadGameCover () {\n    let gameCoverUrl = await this.gamesService.getGameCover(this.state.gameTile.gameID)\n    gameCoverUrl = gameCoverUrl.replace('thumb', 'screenshot_med')\n    let newGameTile = {...this.state.gameTile}\n    newGameTile.coverUrl = gameCoverUrl\n    this.setState({\n      ...this.state,\n      gameTile: newGameTile\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ProfileService from '../../../services/profile.service'\nimport ReviewsService from '../../../services/reviews.service'\nimport ReviewTile from '../../../components/ReviewTile/ReviewTile'\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props)\n    this.profileService = new ProfileService()\n    this.reviewsService = new ReviewsService()\n    this.state = {\n      userProfile: {},\n      isLoadingUserProfile: true,\n      userReviews: [],\n      isLoadingUserReviews: true\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {\n          this.state.isLoadingUserProfile\n            ? <p>Loading user profile...</p>\n            : this.renderUserProfile()\n        }\n        {this.renderUserReviews()}\n      </>\n    )\n  }\n\n  componentDidMount() {\n    let username = this.props.match.params.username\n    this.loadUserProfile(username)\n  }\n\n  renderUserProfile() {\n    return (\n      <section className=\"profile\">\n        <h2>{this.state.userProfile.username}</h2>\n        {\n          this.state.userProfile.followers.indexOf(this.props.loggedInUser._id) >= 0\n            ? <button onClick={() => this.handleUnfollowUser(this.state.userProfile)}>Unfollow</button>\n            : <button onClick={() => this.handleFollowUser(this.state.userProfile)}>Follow</button>\n        }\n      </section>\n    )\n  }\n\n  renderUserReviews() {\n    return (\n      <section className=\"user-reviews\">\n        <h2>{this.state.isLoadingUserProfile ? 'user' : this.state.userProfile.username}'s reviews ({!this.state.isLoadingUserReviews ? this.state.userReviews.length : 'loading...'})</h2>\n        {\n          this.state.userReviews.length > 0\n            ?\n              <ul>\n                {this.state.userReviews.map(review => {\n                  return (\n                    <Link to={`/reviews/${review._id}`} key={review._id}>\n                      <ReviewTile gameTile={review} />\n                    </Link>\n                  )\n                })}\n              </ul>\n            :\n              this.state.isLoadingUserReviews\n                ? <p>Loading reviews...</p>\n                : <p>You don't have any saved reviews.</p>\n        }\n      </section>\n    )\n  }\n\n  async handleFollowUser(followed) {\n    let followRequest = await this.profileService.follow(followed, this.props.loggedInUser)\n    if (followRequest.followRequest) {\n      let newUserProfile = {...this.state.userProfile}\n      newUserProfile.followers = followRequest.followed.followers\n      this.setState({ ...this.state, userProfile: newUserProfile })\n    } else {\n      alert('Something went wrong')\n    }\n  }\n\n  async handleUnfollowUser(followed) {\n    let unfollowRequest = await this.profileService.unfollow(followed, this.props.loggedInUser)\n    if (unfollowRequest.unfollowRequest) {\n      let newUserProfile = {...this.state.userProfile}\n      newUserProfile.followers = unfollowRequest.unfollowed.followers\n      this.setState({ ...this.state, userProfile: newUserProfile })\n    }\n  }\n\n  async loadUserProfile(username) {\n    let userProfile = await this.profileService.getProfile(username)\n    this.setState({\n      ...this.state,\n      userProfile: userProfile.userProfile,\n      isLoadingUserProfile: false\n    })\n    this.loadUserReviews()\n  }\n\n  async loadUserReviews() {\n    let userReviews = await this.reviewsService.getReviewsPerUser(this.state.userProfile._id)\n    this.setState({ ...this.state, userReviews: userReviews, isLoadingUserReviews: false })\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class LoggedInUserProfile extends Component {\n  constructor(props) {\n    super()\n  }\n\n  render() {\n    \n    return (\n      <div>\n        \n        <h1>User profile</h1>\n        <p><strong>Username: </strong>{this.props.loggedInUser.username} </p>\n        <section className=\"followers\">\n          <h2>Followers ({this.props.loggedInUser.followers.length})</h2>\n          {this.renderFollowers()}\n        </section>\n        <section className=\"following\">\n          <h2>Following ({this.props.loggedInUser.following.length})</h2>\n          {this.renderFollowing()}\n        </section>\n      </div>\n    )\n  }\n\n  renderFollowers() {\n    return (\n      this.props.loggedInUser.followers.length > 0\n        ? \n          <ul>\n            {this.props.loggedInUser.followers.map(follower => {\n              return (\n                <li><Link to={`/profile/${follower.username}`}>{follower.username}</Link></li>\n              )\n            })}\n          </ul>\n        : <p>You have no followers yet</p>\n    )\n  }\n\n  renderFollowing() {\n    return (\n      this.props.loggedInUser.following.length > 0\n        ? \n          <ul>\n            {this.props.loggedInUser.following.map(userFollowed => {\n              return (\n                <li><Link to={`/profile/${userFollowed.username}`}>{userFollowed.username}</Link></li>\n              )\n            })}\n          </ul>\n        : <p>You don't follow anybody yet.</p>\n    )\n  }\n}\n","import axios from 'axios'\n\nexport default class GenresService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/genres`\n    })\n  }\n\n  getAllGenres = async () => {\n    let allGenres = await this.service.get(\"/\")\n    return allGenres\n  }\n}\n","import axios from \"axios\"\n\n// TODO: Este servicio ya no nos sirve? Ahora las platforms se cargan en APP\nexport default class PlatformsService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/platforms`\n    })\n  }\n\n  platforms = async () => {\n    const platforms = await this.service.get('/')\n    return platforms.data\n  }\n}","import React from 'react';\n\nconst PlatformTag = props => {\n  const { platform: { name, id, _id}, type, onChange, checked } = props;\n  const inputNameAttr = type === \"checkbox\" ? _id : \"platform\"\n\n  return (\n    <>\n      <div className=\"field\">\n        <input \n          id={_id} \n          type={type} \n          name={inputNameAttr}\n          value={id} \n          onChange={onChange} \n          checked={checked}\n        />\n        <label htmlFor={_id}>{name}</label>\n      </div>\n    </>\n  );\n};\n\nexport default PlatformTag;","import React, { Component } from \"react\";\nimport PlatformTag from './../../components/PlatformTag/PlatformTag'\n\nexport default class PlatformsTags extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      platforms: props.platforms,\n      platformsSelected: props.selectedPlatforms || []\n    };\n  }\n\n  handleChange(e) {\n    let newPlatformsSelected = [...this.state.platformsSelected]\n\n    e.target.type === \"checkbox\" && e.target.checked \n      ? newPlatformsSelected.push(+e.target.value) \n      : newPlatformsSelected.pop()\n    \n    if (e.target.type === \"radio\") {\n      newPlatformsSelected = [+e.target.value]\n    }\n\n    this.setState({\n      platformsSelected: newPlatformsSelected,\n    });\n\n    this.props.handlePlatformFilterChange(newPlatformsSelected);\n  }\n  \n  render() {    \n    const { platforms, platformsSelected } = this.state;\n    const { type } = this.props;\n    \n    return (\n      <> \n        {platforms.map(platform => \n          <PlatformTag \n            key={platform.id} \n            type={type}\n            platform={platform} \n            onChange={e => this.handleChange(e)}\n            checked={platformsSelected.includes(platform.id)}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nconst GenreTag = props => {\n  const { genre: { name, id, _id}, type, onChange, checked } = props;\n  const inputNameAttr = type === \"checkbox\" ? _id : \"genre\"\n\n  return (\n    <>\n      <div className=\"field\">\n        <input \n          id={_id} \n          type={type} \n          name={inputNameAttr}\n          value={id} \n          onChange={onChange}\n          checked={checked}\n        />\n        <label htmlFor={_id}>{name}</label>\n      </div>\n    </>\n  );\n};\n\nexport default GenreTag;","import React, { Component } from \"react\";\nimport GenreTag from \"../GenreTag/GenreTag\"\n\nexport default class GenresTags extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      genres: props.genres,\n      genresSelected: props.selectedGenres || [],\n    };\n  }\n\n  handleChange(e) {\n    let newGenresSelected = [...this.state.genresSelected]\n\n    e.target.type === \"checkbox\" && e.target.checked \n      ? newGenresSelected.push(+e.target.value) \n      : newGenresSelected.pop()\n    \n    if (e.target.type === \"radio\") {\n      newGenresSelected = [+e.target.value]\n    }\n\n    this.setState({\n      genreSelected: newGenresSelected,\n    });\n\n    this.props.handleGenreFilterChange(newGenresSelected);\n  }\n  \n  render() {      \n    const { genres, genresSelected } = this.state;\n    const { type } = this.props;\n    \n    return (\n      <> \n        {genres.map(genre => \n          <GenreTag \n            key={genre.id} \n            type={type}\n            genre={genre} \n            onChange={e => this.handleChange(e)} \n            checked={genresSelected.includes(genre.id)}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport PlatformsService from './../../../services/platforms.service'\n\nexport default class Platform extends Component {\n  constructor(props) {\n    super(props)\n    this.service = new PlatformsService()\n    this._isMounted = false\n    \n    this.state = {\n      platforms: props.platforms.platforms,\n      platformsFiltered: props.platforms.platforms,\n      isLoadingPlatforms: props.platforms.isLoadingPlatforms,\n      currentPlatform: props.platforms.currentPlatform\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Platforms</h1>\n        <ul className=\"platforms-list\">\n        {\n          (this.state.platformsFiltered.length > 0)\n          ? (\n            this.state.platformsFiltered.map(platform => {\n              return <li key={platform._id}>{platform.name}</li>\n            })\n          )\n          : null\n        }\n        </ul>\n      </div>\n    )\n  }\n\n  async componentDidMount() {\n    let allPlatforms = await this.service.platforms()\n    if (this._isMounted) {\n      this.setState({\n        ...this.state,\n        platforms: allPlatforms\n      })\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport GameService from './../../../services/games.service'\nimport GenresService from './../../../services/genres.service'\nimport PlatformsService from './../../../services/platforms.service'\nimport PlatformsTags from './../../../components/PlatformsTags/PlatformsTags'\nimport GenresTags from './../../../components/GenresTags/GenresTags'\nimport Platform from '../Platforms/Platforms'\nimport queryString from 'query-string'\n\nexport default class Games extends Component {\n  constructor(props) {\n    super(props)\n\n    this.gamesService = new GameService()\n    this.genresService = new GenresService()\n    this.platformsService = new PlatformsService()\n\n    this.queryParams = queryString.parse(window.location.search)\n\n    this.state = {\n      pagination: {\n        limit: 10,\n        offset: 0,\n        currentPage: 0,\n      },\n      games: props.games\n    }\n  }\n  \n  render() {\n    return (\n      <>\n        {this.renderFilters()}\n        {this.renderGames()}\n      </>\n    )\n  }\n\n  componentDidMount() {}\n\n  async loadNextGames() {\n    this.setState({\n      isLoadingGames: true\n    })\n    \n    let nextPage = this.state.pagination.currentPage + 1\n    let nextOffset = this.state.pagination.limit * nextPage\n    \n    let nextNewGames = await this.gamesService.getGames(this.state.pagination.limit, nextOffset)\n    let newGames = [...this.state.games]\n    let newPagination = {...this.state.pagination}\n    newPagination.offset = nextOffset\n    newPagination.currentPage = nextPage\n    newGames.push(...nextNewGames.data);\n\n    this.setState({\n      pagination: newPagination,\n      games: newGames,\n      isLoadingGames: false\n    })\n  }\n\n  renderFilters() {    \n    return (\n      <section>\n        <form className=\"form\" onSubmit={e => this.handleFormSubmit(e)}>\n\n          <section className=\"form-section\">\n            <h3>Genres</h3>\n            <div className=\"form-section-content\">\n              {this.props.genres.isLoadingGenres\n                ?\n                  <p>Loading genres...</p>\n                :\n                <GenresTags \n                  handleGenreFilterChange={this.handleGenreFilterChange}\n                  selectedGenres={this.props.genres.currentGenre}\n                  genres={this.props.genres.genres} \n                  type=\"checkbox\" \n                />\n              }\n            </div>\n          </section>\n\n          <section className=\"form-section\">\n            <h3>Platforms</h3>\n            <div className=\"form-section-content\">\n              {this.props.platforms.isLoadingPlatforms\n                ?\n                  <p>Loading platforms...</p>\n                :\n                <PlatformsTags \n                  handlePlatformFilterChange={this.handlePlatformFilterChange} \n                  platforms={this.props.platforms.platforms}\n                  selectedPlatforms={this.props.platforms.currentPlatform}\n                  type=\"checkbox\" \n                />\n              }\n            </div>\n          </section>\n\n          <div className=\"form-actions\">\n            <button type=\"submit\">Apply filter</button>\n          </div>\n        </form>\n      </section>\n    )\n  }\n  \n  handleGenreFilterChange = (genresSelected) => {\n    this.props.onGenreFilterChange(genresSelected)\n  }\n  \n  handlePlatformFilterChange = (platformFilter) => {\n    this.props.onPlatformFilterChange(platformFilter)\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault()\n  \n    this.props.onFilterApply();\n  }\n  \n  renderGames() {\n    return (\n      <section>\n        <h2>Games</h2>\n        <ul className=\"games-list\">\n          {this.state.games.games.length > 0\n            ? \n            this.state.games.games.map(game => {\n              return <Link key={game.id} to={`/games/${game.id}`}>\n                  <li>{game.name}</li>\n                </Link>\n              })\n            : null\n          }\n        </ul>\n        {this.state.games.isLoadingGames\n          ?\n          <Link to={\"#\"}>\n              Loading...\n            </Link>\n          :\n          <Link to={\"#\"} onClick={() => this.loadNextGames()}>\n              Load more\n            </Link>\n        }\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport GenresService from './../../../services/genres.service'\n\nexport default class Genres extends Component {\n  constructor() {\n    super()\n    this.service = new GenresService()\n    this.state = {\n      isLoadingGenres: true,\n      genres: []\n    }\n  }\n  \n  render() {\n    return (\n      <section className=\"genres-section\">\n        <h1>Genres</h1>\n        <ul className=\"genres-list\">\n          {this.state.genres.length > 0\n            ?\n              this.state.genres.map(genre => {\n                return <li key={genre.id}>{genre.name}</li>\n              })\n            : null\n          }\n\n          {this.state.isLoadingGenres\n            ?\n              <p to={\"#\"}>Loading...</p>\n            : null\n          }\n        </ul>\n      </section>\n    )\n  }\n\n  async componentDidMount() {\n    let allGenres = await this.service.getAllGenres()\n    this.setState({\n      ...this.state,\n      genres: allGenres.data,\n      isLoadingGenres: false\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport ReviewsService from '../../../../services/reviews.service'\nimport queryString from 'query-string'\nimport GamesService from '../../../../services/games.service'\n\nexport default class CreateReview extends Component {\n  constructor(props) {\n    super(props)\n\n    this.reviewsService = new ReviewsService()\n    this.gamesService = new GamesService()\n\n    const queryParams = queryString.parse(window.location.search);\n    \n    this.state = {\n      title: '',\n      platform: '',\n      review: '',\n      history: { content: '', rating: '' },\n      graphics: { content: '', rating: '' },\n      sound: { content: '', rating: '' },\n      gameplay: { content: '', rating: '' },\n      author: props.loggedInUser._id,\n      pros: '',\n      cons: '',\n      gameName: '',\n      isLoadingGameName: true,\n      gameID: queryParams.game ? queryParams.game : ''\n    }\n  }\n  \n  render() {\n    return (\n      <section>\n        <h2>New review</h2>\n        <form onSubmit={(e) => this.handleCreateReviewFormSubmit(e)}>\n          <input type=\"hidden\" name=\"gameID\" value={this.state.gameID}/>\n          <input type=\"hidden\" name=\"gameName\" value={this.state.gameName}/>\n          <div className=\"field\">\n            <input type=\"text\" disabled name=\"game\" id=\"game\" value={this.state.isLoadingGameName ? 'Loading name...' : this.state.gameName} placeholder={\"The game for the review\"}/>\n            <label htmlFor=\"game\" className=\"label\">Game</label>\n          </div>\n          <div className=\"field\">\n            <input type=\"text\" onChange={(e) => this.handleInputChange(e)} value={this.state.title} name=\"title\" id=\"title\" placeholder=\"Title of the review\" />\n            <label htmlFor=\"title\" className=\"label\">Title</label>\n          </div>\n          <div className=\"field\">\n            <div className=\"platforms-selection\">\n              {this.props.platforms.map(platform => {\n                return (\n                  <div className=\"platforms-selection-tag\" key={platform._id}>\n                    <input type=\"radio\" onClick={e => this.handleInputChange(e)} id={platform._id} name=\"platform\" value={platform._id} />\n                    <label htmlFor={platform._id}>{platform.name}</label>\n                  </div>\n                )\n              })}\n            </div>\n            <label htmlFor=\"platform\" className=\"label\">Platform</label>\n          </div>\n          <div className=\"field\">\n            <textarea name=\"review\" onChange={(e) => this.handleInputChange(e)} value={this.state.review} id=\"review\"></textarea>\n            <label htmlFor=\"review\" className=\"label\">Review content</label>\n          </div>\n          <div className=\"form-section\">\n            <h3>History content</h3>\n            <div className=\"field\">\n              <textarea name=\"historyContent\" onChange={(e) => this.handleInputChange(e, \"history\")} value={this.state.history.content} id=\"history-content\"></textarea>\n              <label htmlFor=\"history-content\">History content</label>\n            </div>\n            <div className=\"field\">\n              <div className=\"stars-validation\">\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"history\")} name=\"historyRating\" value=\"1\" id=\"history-rating-1\"/>\n                <label htmlFor=\"history-rating-1\" className=\"star\">1</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"history\")} name=\"historyRating\" value=\"2\" id=\"history-rating-2\"/>\n                <label htmlFor=\"history-rating-2\" className=\"star\">2</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"history\")} name=\"historyRating\" value=\"3\" id=\"history-rating-3\"/>\n                <label htmlFor=\"history-rating-3\" className=\"star\">3</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"history\")} name=\"historyRating\" value=\"4\" id=\"history-rating-4\"/>\n                <label htmlFor=\"history-rating-4\" className=\"star\">4</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"history\")} name=\"historyRating\" value=\"5\" id=\"history-rating-5\"/>\n                <label htmlFor=\"history-rating-5\" className=\"star\">5</label>\n              </div>\n              <label htmlFor=\"history-rating\" className=\"label\">History rating</label>\n            </div>\n          </div>\n          <div className=\"form-section\">\n            <h3>Graphics content</h3>\n            <div className=\"field\">\n              <textarea name=\"graphicsContent\" onChange={(e) => this.handleInputChange(e, \"graphics\")} value={this.state.graphics.content} id=\"graphic-content\"></textarea>\n              <label htmlFor=\"graphic-content\">Graphic content</label>\n            </div>\n            <div className=\"field\">\n              <div className=\"stars-validation\">\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"graphics\")} name=\"graphicsRating\" value=\"1\" id=\"graphic-rating-1\"/>\n                <label htmlFor=\"graphic-rating-1\" className=\"star\">1</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"graphics\")} name=\"graphicsRating\" value=\"2\" id=\"graphic-rating-2\"/>\n                <label htmlFor=\"graphic-rating-2\" className=\"star\">2</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"graphics\")} name=\"graphicsRating\" value=\"3\" id=\"graphic-rating-3\"/>\n                <label htmlFor=\"graphic-rating-3\" className=\"star\">3</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"graphics\")} name=\"graphicsRating\" value=\"4\" id=\"graphic-rating-4\"/>\n                <label htmlFor=\"graphic-rating-4\" className=\"star\">4</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"graphics\")} name=\"graphicsRating\" value=\"5\" id=\"graphic-rating-5\"/>\n                <label htmlFor=\"graphic-rating-5\" className=\"star\">5</label>\n              </div>\n              <label htmlFor=\"graphic-rating\" className=\"label\">Graphic rating</label>\n            </div>\n          </div>\n          <div className=\"form-section\">\n            <h3>Sound content</h3>\n            <div className=\"field\">\n              <textarea name=\"soundContent\" onChange={(e) => this.handleInputChange(e, \"sound\")} value={this.state.sound.content} id=\"sound-content\"></textarea>\n              <label htmlFor=\"sound-content\">Sound content</label>\n            </div>\n            <div className=\"field\">\n              <div className=\"stars-validation\">\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"sound\")} name=\"soundRating\" value=\"1\" id=\"sound-rating-1\"/>\n                <label htmlFor=\"sound-rating-1\" className=\"star\">1</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"sound\")} name=\"soundRating\" value=\"2\" id=\"sound-rating-2\"/>\n                <label htmlFor=\"sound-rating-2\" className=\"star\">2</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"sound\")} name=\"soundRating\" value=\"3\" id=\"sound-rating-3\"/>\n                <label htmlFor=\"sound-rating-3\" className=\"star\">3</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"sound\")} name=\"soundRating\" value=\"4\" id=\"sound-rating-4\"/>\n                <label htmlFor=\"sound-rating-4\" className=\"star\">4</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"sound\")} name=\"soundRating\" value=\"5\" id=\"sound-rating-5\"/>\n                <label htmlFor=\"sound-rating-5\" className=\"star\">5</label>\n              </div>\n              <label htmlFor=\"sound-rating\" className=\"label\">Sound rating</label>\n            </div>\n          </div>\n          <div className=\"form-section\">\n            <h3>Gameplay content</h3>\n            <div className=\"field\">\n              <textarea name=\"gameplayContent\" onChange={(e) => this.handleInputChange(e, \"gameplay\")} value={this.state.gameplay.content} id=\"gameplay-content\"></textarea>\n              <label htmlFor=\"gameplay-content\">Gameplay content</label>\n            </div>\n            <div className=\"field\">\n              <div className=\"stars-validation\">\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"gameplay\")} name=\"gameplayRating\" value=\"1\" id=\"gameplay-rating-1\"/>\n                <label htmlFor=\"gameplay-rating-1\" className=\"star\">1</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"gameplay\")} name=\"gameplayRating\" value=\"2\" id=\"gameplay-rating-2\"/>\n                <label htmlFor=\"gameplay-rating-2\" className=\"star\">2</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"gameplay\")} name=\"gameplayRating\" value=\"3\" id=\"gameplay-rating-3\"/>\n                <label htmlFor=\"gameplay-rating-3\" className=\"star\">3</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"gameplay\")} name=\"gameplayRating\" value=\"4\" id=\"gameplay-rating-4\"/>\n                <label htmlFor=\"gameplay-rating-4\" className=\"star\">4</label>\n                <input type=\"radio\" onClick={e => this.handleSelectInputChange(e, \"gameplay\")} name=\"gameplayRating\" value=\"5\" id=\"gameplay-rating-5\"/>\n                <label htmlFor=\"gameplay-rating-5\" className=\"star\">5</label>\n              </div>\n              <label htmlFor=\"gameplay-rating\" className=\"label\">Gameplay rating</label>\n            </div>\n          </div>\n          <div className=\"form-section\">\n            <h3>Pros and cons</h3>\n            <div className=\"field\">\n              <input type=\"text\" onChange={(e) => this.handleInputChange(e)} value={this.state.pros} name=\"pros\" id=\"pros\"/>\n              <label htmlFor=\"pros\" className=\"label\">Pros</label>\n            </div>\n            <div className=\"field\">\n              <input type=\"text\" onChange={(e) => this.handleInputChange(e)} value={this.state.cons} name=\"cons\" id=\"cons\"/>\n              <label htmlFor=\"cons\" className=\"label\">Cons</label>\n            </div>\n          </div>\n          <div className=\"form-actions\">\n            <input type=\"submit\" value=\"Create\"/>\n          </div>\n        </form>\n      </section>\n    )\n  }\n\n  componentDidMount() {\n    this.loadGameName()\n  }\n\n  async loadGameName() {\n    if (this.state.gameID !== '') {\n      // let gameName = await \n      let gameName = await this.gamesService.getGameName(this.state.gameID)\n      this.setState({\n        ...this.state,\n        gameName: gameName.name,\n        isLoadingGameName: false\n      })\n    }\n  }\n\n  async handleCreateReviewFormSubmit(e) {\n    e.preventDefault()\n    let reviewCreated = await this.reviewsService.createReview(this.state)\n\n    // TODO: Remove the alert for a nice modal\n    if (reviewCreated.created) alert('Review created successfully')\n  }\n\n  handleSelectInputChange(e, category) {\n    let newState = {...this.state}\n\n    if (e.target.name === 'platform') { newState.platform = e.target.value }\n    else { newState[category].rating = +e.target.value }\n\n    this.setState(newState)\n  }\n\n  handleInputChange (e, category) {\n    let newState = {...this.state}\n    if (category) { newState[category].content = e.target.value }\n    else { newState[e.target.name] = e.target.value }\n    this.setState(newState)\n  }\n}\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport GamesService from './../../../services/games.service'\nimport {animateScroll as scroll} from 'react-scroll'\n\nclass Game extends Component {\n  constructor(props) {\n    super(props)\n    this.gamesService = new GamesService()\n    \n    this.state = {\n      gameID: props.match.params.gameID,\n      game: {},\n      isLoadingGame: true\n    }\n\n    console.log(\"THEH STATETETETETE\", this.state)\n  }\n  \n  render() {    \n    console.log(\"TESTING\", this.props.loggedInUser.savedGames.indexOf(+this.state.gameID))\n    return (\n      <section className=\"game\">\n        {\n          this.props.loggedInUser.savedGames.indexOf(+this.state.gameID) < 0\n            ? <button onClick={() => this.props.handleFollowRequest(this.state.gameID)}>Follow</button>\n            : <button onClick={() => this.props.handleUnfollowRequest(this.state.gameID)}>Unfollow</button>\n        }\n        {\n          this.state.isLoadingGame\n            ? <p>Loading game info...</p>\n            : this.renderGame()\n        }\n      </section>\n    )\n  }\n\n  componentDidMount() {\n    this.loadGame(this.state.gameID)\n  }\n\n  componentWillReceiveProps(nextProps, state) {\n    if (nextProps.match.params.gameID !== state.gameID) {      \n      this.loadGame(nextProps.match.params.gameID, true)\n      // scroll.scrollToTop({\n      //   duration: 750\n      // })\n    }\n  }\n\n  renderTemplate() {\n\n  }\n\n  renderGame() {\n    return (\n      <section className=\"game-enter\">\n        {this.renderHeader()}\n        {this.renderIAmFollowing()}\n        {this.state.game.summary ? this.renderSummary() : null}\n        {this.state.game.storyline ? this.renderStoryLine() : null}\n        {this.state.game.game_modes ? this.renderGameModes() : null}\n        {this.state.game.genres ? this.renderGameGenres() : null}\n        {this.state.game.screenshots ? this.renderScreenshots() : null}\n        {this.state.game.videos ? this.renderVideos() : null}\n        {this.state.game.release_dates ? this.renderReleaseDates() : null}\n        {this.state.game.websites ? this.renderWebsites() : null}\n        {this.state.game.similar_games ? this.renderSimilarGames() : null}\n      </section>\n    )\n  }\n\n  renderHeader() {\n    return (\n      <header className=\"game-header\">\n        <div className=\"game-header-image\">\n          {\n            this.state.game.cover\n              ? <img src={`http:${this.state.game.cover.url.replace('t_thumb', 't_cover_small_2x')}`} alt={this.state.game.name}/>\n              : null\n          }\n        </div>\n        <div className=\"game-header-info\">\n          <h2 className=\"game-title\">{this.state.game.name}</h2>\n          <div className=\"game-platforms\">\n            {this.state.game.platforms ? this.renderPlatforms() : null}\n          </div>\n        </div>\n      </header>\n    )\n  }\n\n  renderIAmFollowing() {\n    // TODO: Chek that there are games that doesnt have total_rating\n    \n    return (\n      <div className=\"game-actions\">\n        <div>\n          <span className=\"game-actions-status\">Following</span>\n          <span className=\"game-actions-rating\">{(this.state.game.total_rating / 10).toFixed(1)}</span>\n        </div>\n        <div>\n          <Link to={`/room?room=${this.state.game.slug}`}>Game chat room</Link>\n        </div>\n      </div>\n    )\n  }\n\n  renderSummary() {\n    return (\n      <section className=\"game-section\">\n        <h3>Summary</h3>\n        <div className=\"game-section-content\">\n          <p>{this.state.game.summary}</p>\n        </div>\n      </section>\n    )\n  }\n\n  renderStoryLine() {\n    return (\n      <section className=\"game-section\">\n        <h3>Story line</h3>\n        <p>{this.state.game.storyline}</p>\n      </section>\n    )\n  }\n\n  renderPlatforms() {\n    return (\n      this.state.game.platforms.map(platform => {\n        return <Link to={`/games?platform=${platform.id}`} key={platform.id} className=\"tag\">{platform.name}</Link>\n      })\n    )\n  }\n\n  renderGameModes() {\n    return (\n      <section className=\"game-section\">\n          <h3>Modes</h3>\n          <div className=\"game-section-content\">\n            <ul>\n              {this.state.game.game_modes.map(gameMode => {\n                return <li key={gameMode.id}>{gameMode.name}</li>\n              })}\n            </ul>\n          </div>\n        </section>\n    )\n  }\n\n  renderGameGenres() {\n    return (\n      <section className=\"game-section\">\n          <h3>Genres</h3>\n          <div className=\"game-section-content\">\n            <ul>\n              {this.state.game.genres.map(genre => {\n                return (\n                  <li key={genre.id}>\n                    <Link to={`/games?genres=${genre}`}>{genre.name}</Link>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </section>\n    )\n  }\n\n  renderInvolvedCompanies() {\n    return (\n      <ul>\n        {this.state.game.involved_companies.map(company => {\n          return (\n            <li key={company.id}>{company.name}</li>\n          )\n        })}\n      </ul>\n    )\n  }\n  \n  renderScreenshots() {\n    return (\n      <section className=\"game-section\">\n          <h3>Screenshots</h3>\n          <div className=\"game-section-content\">\n            <ul>\n              {this.state.game.screenshots.map(screenshot => {\n                return (\n                  <li key={screenshot.id}>\n                    <img src={`http:${screenshot.url.replace('t_thumb', 't_screenshot_big')}`} alt={`${this.state.game.name} screenshot`}/>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </section>\n    )\n  }\n\n  renderVideos() {\n    return (\n      <section className=\"game-section\">\n        <h3>Videos</h3>\n        <div className=\"game-section-content\">\n          <ul>\n            {this.state.game.videos.map(video => {\n              return (\n                <li key={video.id}>\n                  <iframe\n                    width=\"560\" height=\"315\"\n                    src={`https://www.youtube.com/embed/${video.video_id}`}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen></iframe>\n                  <p>{video.name}</p>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </section>\n    )\n  }\n\n  renderReleaseDates() {\n    return (\n      <section className=\"game-section\">\n        <h3>Release dates</h3>\n        <section className=\"game-subsection\">\n          <h4>First release date</h4>\n          <p>\n            <Moment format='MMMM Do YYYY'>{new Date(this.state.game.first_release_date * 1000)}</Moment>\n          </p>\n        </section>\n        <section className=\"game-subsection\">\n          <h4>Other release dates</h4>\n          {this.state.game.release_dates.map(releaseDate => {\n            return (\n              <li key={releaseDate.id}>\n                <Moment format='MMMM Do YYYY'>{new Date(new Date(releaseDate.date * 1000))}</Moment>\n              </li>\n            )\n          })}\n        </section>\n      </section>\n    )\n  }\n\n  renderWebsites() {\n    return (\n      <section className=\"game-section\">\n        <h3>Websites</h3>\n        <div className=\"game-section-content\">\n          <ul>\n            {this.state.game.websites.map(website => {\n              return (\n                <li key={website.id}><a href={`${website.url}`} target=\"_blank\">{website.url}</a></li>\n              )\n            })}\n          </ul>\n        </div>\n      </section>\n    )\n  }\n\n  renderSimilarGames() {\n    return (\n      <section className=\"game-section\">\n        <h3>Similar games</h3>\n        <div className=\"game-section-content\">\n          {this.state.game.similar_games.map(similarGame => {\n            return (\n              <Link to={`/games/${similarGame.id}`} key={similarGame.id}>\n                <li>\n                  {\n                    similarGame.cover\n                      ? <img src={`http:${similarGame.cover.url.replace('t_thumb', 't_cover_small_2x')}`} alt={`${similarGame.name}`}/>\n                      : null\n                  }\n                  <p>{similarGame.name}</p>\n                </li>\n              </Link>\n            )\n          })}\n        </div>\n      </section>\n    )\n  }\n\n  async loadGame(gameID, reRender) {\n    // this.setState({ ...this.state, isLoadingGame: true })\n    // let game = await this.gamesService.getGameData(gameID)\n    // if (reRender) {\n    //   setTimeout(() => {\n    //     this.setState({ isLoadingGame: false, game: game[0] })\n    //   }, 500)\n    // } else {\n    //   this.setState({ isLoadingGame: false, game: game[0] })\n    // }\n  }\n\n  async loadRelatedGames() {\n    \n  }\n}\n\nexport default withRouter(Game)\n","import axios from 'axios'\n\nexport default class ReviewCommentsService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/reviewComments`\n    })\n  }\n\n  loadComments = async (offset, limit, reviewID) => {\n    let comments = await this.service.get(`/?reviewID=${reviewID}`)\n    return comments.data\n  }\n\n  addComment = async (comment) => {\n    let makeCommentResult = await this.service.post(`/add`, comment)\n    return makeCommentResult.data\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ReviewsService from '../../../../services/reviews.service'\nimport ReviewCommentsService from './../../../../services/reviewComments.service'\n\nexport default class Review extends Component {\n  constructor(props) {\n    super(props)\n\n    this.reviewsService = new ReviewsService()\n    this.reviewCommentsService = new ReviewCommentsService()\n\n    this.state = {\n      review: null,\n      isLoadingReview: [],\n      comment: { content: '', authorID: this.props.loggedInUserID, reviewID: this.props.match.params.reviewID },\n      comments: {\n        comments: [], isLoadingComments: true,\n        pagination: { currentPage: 0, offset: 0, limit: 10 }\n      },\n    }\n  }\n  \n  render() {\n    return (\n      <section className=\"review\">\n        {\n          this.state.isLoadingReview\n            ? <p>Loading review...</p>\n            : this.renderReview()\n        }\n      </section>\n    )\n  }\n\n  componentDidMount() {\n    this.loadReviewData()\n    this.loadComments()\n  }\n\n  async loadReviewData() {\n    let reviewData = await this.reviewsService.getReviewData(this.props.match.params.reviewID)\n    this.setState({ ...this.state, review: reviewData, isLoadingReview: false })\n  }\n\n  async loadComments() {\n    let newComments = {...this.state.comments}\n    newComments.isLoadingComments = true\n    \n    let comments = await this.reviewCommentsService.loadComments(this.state.comments.pagination.offset, this.state.comments.pagination.limit, this.state.comment.reviewID)\n\n    newComments.pagination.pagcurrentPage += 1;\n    newComments.pagination.offset = newComments.pagination.currentPage * newComments.pagination.limit\n    newComments.comments = comments.comments\n    newComments.isLoadingComments = false\n\n    this.setState({ ...this.state, comments: newComments })\n  }\n\n  renderReview() {\n    return (\n      <>\n        <header>\n          <div>\n            {/* TODO: load game cover here */}\n            <span>Load game cover here</span>\n          </div>\n          <div>\n            <p>{this.state.review.platform.name}</p>\n            <h2>{this.state.review.gameName} <Link to={`/games/${this.state.review.gameID}`}>View</Link></h2>\n            {\n              this.props.loggedInUserName === this.state.review.author.username\n                ? <p>by <Link to={`/profile`}>me</Link></p>\n                : <p>by <Link to={`/profile/${this.state.review.author.username}`}>{this.state.review.author.username}</Link></p>\n            }\n          </div>\n        </header>\n        <section className=\"review-stats\">\n          <div>\n            <p><strong><span>{this.state.review.followers.length}</span></strong> users follow this review</p>\n          </div>\n          <div className=\"following-and-rating\">\n            {\n              // this.props.loggedInUser.savedReviews.indexOf(this.state.review._id) >= 0\n              this.state.review.followers.indexOf(this.props.loggedInUser._id) >= 0\n                ? <button onClick={() => this.handleUnfollowReview()}>Unfollow</button>\n                : <button onClick={() => this.handleFollowReview()}>Follow</button>\n            }\n            <div className=\"rating\">\n              <span>{this.state.review.totalRating}</span>\n            </div>\n          </div>\n        </section>\n        <section>\n          <h2>{this.state.review.title}</h2>\n          <p>{this.state.review.review}</p>\n          <section>\n            <h3>History</h3>\n            <p>{this.state.review.history.content}</p>\n            <span className=\"category-rating\">{this.state.review.history.rating}</span>\n          </section>\n          <section>\n            <h3>Gameplay</h3>\n            <p>{this.state.review.gameplay.content}</p>\n            <span className=\"category-rating\">{this.state.review.gameplay.rating}</span>\n          </section>\n          <section>\n            <h3>Graphics</h3>\n            <p>{this.state.review.graphics.content}</p>\n            <span className=\"category-rating\">{this.state.review.graphics.rating}</span>\n          </section>\n          <section>\n            <h3>Sound</h3>\n            <p>{this.state.review.sound.content}</p>\n            <span className=\"category-rating\">{this.state.review.sound.rating}</span>\n          </section>\n        </section>\n        <section className=\"comments\">\n          <h2>Comments</h2>\n          {this.renderComments()}\n        </section>\n      </>\n    )\n  }\n\n  renderComments() {\n    return (\n      <>\n        <form className=\"comment-form\" onSubmit={e => this.handleFormSubmit(e)}>\n          <div className=\"field\">\n            <textarea onChange={(e) => this.handleCommentChange(e)} type=\"text\" name=\"content\" placeholder=\"Write a comment\" value={this.state.comment.content} id=\"comment-text\"></textarea>\n            <label htmlFor=\"comment-text\" className=\"label\">Comment</label>\n          </div>\n          <div className=\"form-actions\">\n            <input type=\"submit\" value=\"Send\"/>\n          </div>\n        </form>\n        <div className=\"user-comments\">\n          {\n            this.state.comments.comments.length > 0\n              ? this.state.comments.comments.map((comment) => {\n                  return (\n                    <div className=\"comment\" key={comment._id}>\n                      <div className=\"comment-user\">\n                        <p><strong>User: </strong>{comment.authorID.username}</p>\n                      </div>\n                      <div className=\"comment-content\">\n                        {comment.content}\n                      </div>\n                    </div>\n                  )\n                })\n              : <p>There are no comments yet.</p>\n          }\n        </div>\n        <div className=\"comments-load-more\">\n          {\n            this.state.comments.isLoadingComments\n              ? <Link to={\"\"}>Loading...</Link>\n              : <Link onClick={() => this.loadComments()} to={\"#\"}>Load more</Link>\n          }\n        </div>\n      </>\n    )\n  }\n\n  async handleFollowReview() {\n    let reviewFollowRequest = await this.reviewsService.follow(this.state.review._id, this.props.loggedInUser._id)\n    if (reviewFollowRequest.reviewFollowRequestDone) {\n      let newReview = {...this.state.review}\n      newReview.followers = reviewFollowRequest.reviewFollow.followers\n      this.setState({ ...this.state, review: newReview })\n    }\n  }\n\n  async handleUnfollowReview() {\n    let reviewUnfollowRequest = await this.reviewsService.unfollow(this.state.review._id, this.props.loggedInUser._id)\n    if (reviewUnfollowRequest.reviewUnfollowRequestDone) {\n      let newReview = {...this.state.review}\n      newReview.followers = reviewUnfollowRequest.review.followers\n      this.setState({ ...this.state, review: newReview })\n    }\n  }\n\n  handleCommentChange(e) {\n    let newComment = {...this.state.comment}\n    newComment[e.target.name] = e.target.value\n    this.setState({ ...this.state, comment: newComment })\n  }\n\n  async handleFormSubmit(e) {\n    e.preventDefault()\n    let commentAdded = await this.reviewCommentsService.addComment(this.state.comment)\n    \n    if (commentAdded.commentCreated) {\n      let newComments = {...this.state.comments}\n      newComments.comments.unshift(commentAdded.commentCreated)\n      this.setState({ ...this.state, comments: newComments })\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ReviewsService from '../../../services/reviews.service'\nimport ReviewTile from '../../../components/ReviewTile/ReviewTile'\n\nexport default class Saved extends Component {\n  constructor(props) {\n    super(props)\n    this.reviewsService = new ReviewsService()\n    this.state = {\n      savedReviews: [],\n      isLoadingSavedReviews: true,\n      savedGames: [],\n      isLoadingSavedGames: true\n    }\n  }\n  \n  render() {\n    return (\n      <section className=\"saved\">\n        <h2>Saved reviews</h2>\n        {this.renderSavedReviews()}\n      </section>\n    )\n  }\n\n  componentDidMount() {\n    this.loadSavedReviews()\n  }\n\n  renderSavedReviews() {\n    return (\n      <>\n        {\n          this.state.isLoadingSavedReviews\n            ? <p>Loading saved reviews...</p>\n            :\n              <ul>\n                {\n                this.state.savedReviews.map(savedReview => {\n                  return (\n                    <Link to={`/reviews/${savedReview._id}`} key={savedReview._id}>\n                      <ReviewTile key={savedReview._id} gameTile={savedReview} />\n                    </Link>\n                  )\n                })\n              }\n              </ul>\n        }\n      </>\n    )\n  }\n\n  async loadSavedReviews() {\n    let savedReviews = await this.reviewsService.getReviewsPerUser(this.props.loggedInUser._id)\n    this.setState({ ...this.state, savedReviews: savedReviews, isLoadingSavedReviews: false })\n  }\n}\n","import React, { Component } from 'react'\nimport io from 'socket.io-client'\nimport queryString from 'query-string'\n\nexport default class Room extends Component {\n  constructor(props) {\n    super(props)\n    this.queryParams = queryString.parse(window.location.search)\n    this.socket = io(`${process.env.REACT_APP_SERVER_BASE_URL}`)\n    this.state = {\n      message: '',\n      currentOnlineUsers: [],\n      messages: []\n    }\n  }\n  \n  render() {\n    return (\n      <section className=\"room\">\n        <h1>Room</h1>\n        <div className=\"chat\">\n          <div className=\"chat-users\">\n            {\n              this.state.currentOnlineUsers.length > 0\n                ?\n                  <ul className=\"chat-users-list\">\n                    {this.state.currentOnlineUsers.map(onlineUser => {\n                      return (\n                        <li key={onlineUser.username}>{onlineUser.username}</li>\n                      )\n                    })}\n                  </ul>\n                : null\n            }\n          </div>\n          {\n            this.state.messages.length > 0\n              ?\n                <ul className=\"chat-messages\">\n                  {this.state.messages.map((message, idx) => {\n                    return (\n                      <li key={idx}>{message.content}</li>\n                    )\n                  })}\n                </ul>\n              : null\n          }\n        </div>\n        <form onSubmit={(e) => this.handleFormSubmit(e)}>\n          <div className=\"field\">\n            <input type=\"text\" name=\"message\" id=\"message\" onChange={(e) => this.handleInputChange(e)} value={this.state.message} placeholder=\"Type here your message\"/>\n          </div>\n          <div className=\"form-actions\">\n            <input type=\"submit\" value=\"Send message\"/>\n          </div>\n        </form>\n      </section>\n    )\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault()\n    // Sent a message to the others users in the room\n    this.socket.emit('user-send-message-room', { content: this.state.message, room: this.queryParams.room })\n    this.setState({ ...this.state, message: '' })\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      message: e.target.value\n    })\n  }\n\n  componentDidMount() {\n    // User connects to a room\n    this.socket.emit('user-join-room', { username: this.props.loggedInUser.username, room: this.queryParams.room })\n\n    // Get the room messages\n    this.socket.on('get-room-messages', (data) => {\n      this.setState({ ...this.state, messages: data.messages })\n    })\n\n    // Rest of users recieve that someone connected to their room\n    this.socket.on('user-join-room', (data) => {\n      this.setState({ ...this.state, currentOnlineUsers: data.currentOnlineUsers })\n    })\n\n    // Other users detect that someone sent a message\n    this.socket.on('user-send-message-room', (data) => {\n      let newMessages = [...this.state.messages]\n      newMessages.push({ username: data.username, content: data.content })\n      this.setState({ ...this.state, messages: newMessages })\n    })\n\n    // Other users detect that someone left the room\n    this.socket.on('user-left-room', (data) => {\n      this.setState({ ...this.state, currentOnlineUsers: data.currentOnlineUsers })\n    })\n\n    // Other users detect that they have to update their current users online list\n    this.socket.on('update-online-users', (data) => {\n      this.setState({ ...this.state, currentOnlineUsers: data.currentOnlineUsers })\n    })\n  }\n\n  componentWillUnmount() {\n    // Stop listening for events\n    this.socket.off('user-join-room')\n    this.socket.off('update-online-users')\n    this.socket.off('user-left-room')\n    this.socket.off('user-send-message-room')\n    \n    // Send to the other users that someone left the room\n    this.socket.emit('user-left-room', { username: this.props.loggedInUser.username })\n  }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthService from './../../services/auth.service'\nimport \"./Navbar.scss\"\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {loggedInUser : null}\n    this.authService = new AuthService();\n  }\n  \n  render() {\n    return (\n      <nav className=\"navbar\">\n        <ul className=\"menu\">\n          {!this.state.loggedInUser\n            ? \n            <>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/login\"}>Login</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/signup\"}>Signup</Link></li>\n              </>\n            :\n            <>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/\"}>Home</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/games\"}>Games</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/reviews\"}>Reviews</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/profile\"}>Profile</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/games/coming-soon\"}>Coming Soon</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/games/best-rated\"}>Best rated</Link></li>\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/saved\"}>Saved</Link></li>\n                {/* <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/games/best-rated\"}>Best rated</Link></li> */}\n                {/* <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/genres\"}>Genres</Link></li> */}\n                {/* <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/platforms\"}>Platforms</Link></li> */}\n                <li className=\"menu-item\"><Link className=\"menu-link\" to={\"/logout\"} onClick={this.handleLogout}>Logout</Link></li>\n              </>\n          }\n        </ul>\n      </nav>\n    )\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      ...this.state,\n      loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = (e) => {\n    this.props.logout()\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class BestRated extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bestRated: props.bestRated\n    };\n  }\n\n  render() {\n    return (\n      <section>\n        <h1>Best rated Games</h1>\n        <ul className=\"best-rated-list\">\n          {this.state.bestRated.length > 0\n            ? this.state.bestRated.map(game => {\n                return (\n                  <li key={game.id}>\n                    <Link to={`/games/${game.id}`}>{game.name} ({((game.rating * 5) / 100).toFixed(1)})</Link>\n                  </li>\n                );\n              })\n            : <p>Loading...</p>\n            }\n        </ul>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport GamesService from \"./../../../services/games.service\";\n\nexport default class ComingSoon extends Component {\n  constructor(props) {\n    super(props);\n    this.service = new GamesService();\n\n    this.state = {\n      releases: props.releases\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Releases</h1>\n        {this.render7DaysAgo()}\n        {this.render7Days()}\n        {this.render14Days()}\n        {this.render1Month()}\n        {this.render6Months()}\n        {this.render1Year()}\n      </>\n    );\n  }\n\n  render7DaysAgo() {\n    return (\n      <section>\n        <h2>Recently released</h2>\n\n        {\n          <ul>\n            {this.props.releases.releases7DaysAgo.isLoading7DaysAgo ? (\n              <p>Loading...</p>\n            ) : this.props.releases.releases7DaysAgo.releases7DaysAgo.length >\n              0 ? (\n              this.props.releases.releases7DaysAgo.releases7DaysAgo.map(\n                release => {\n                  return (\n                    <li key={release.id}>\n                      {`${release.name} (${new Date(\n                        release.first_release_date * 1000\n                      ).toDateString()})`}\n                    </li>\n                  );\n                }\n              )\n            ) : (\n              <p>No recent releases</p>\n            )}\n          </ul>\n        }\n      </section>\n    );\n  }\n\n  render7Days() {\n    return (\n      <section>\n        <h2>Next 7 days</h2>\n        {\n          <ul>\n            {this.props.releases.releases7Days.isLoading7Days ? (\n              <p>Loading...</p>\n            ) : this.props.releases.releases7Days.releases7Days.length > 0 ? (\n              this.props.releases.releases7Days.releases7Days.map(release => {\n                return (\n                  <li key={release.id}>\n                    {`${release.name} (${new Date(\n                      release.first_release_date * 1000\n                    ).toDateString()})`}\n                  </li>\n                );\n              })\n            ) : (\n              <p>No recent releases</p>\n            )}\n          </ul>\n        }\n      </section>\n    );\n  }\n\n  render14Days() {\n    return (\n      <section>\n        <h2>Next 14 days</h2>\n        {\n          <ul>\n            {this.props.releases.releases14Days.isLoading14Days ? (\n              <p>Loading...</p>\n            ) : this.props.releases.releases14Days.releases14Days.length > 0 ? (\n              this.props.releases.releases14Days.releases14Days.map(release => {\n                return (\n                  <li key={release.id}>\n                    {`${release.name} (${new Date(\n                      release.first_release_date * 1000\n                    ).toDateString()})`}\n                  </li>\n                );\n              })\n            ) : (\n              <p>No releases for the next 14 days</p>\n            )}\n          </ul>\n        }\n      </section>\n    );\n  }\n\n  render1Month() {\n    return (\n      <section>\n        <h2>Next 30 days</h2>\n        {\n          <ul>\n            {this.props.releases.releases1Month.isLoading1Month ? (\n              <p>Loading...</p>\n            ) : this.props.releases.releases1Month.releases1Month.length > 0 ? (\n              this.props.releases.releases1Month.releases1Month.map(release => {\n                return (\n                  <li key={release.id}>\n                    {`${release.name} (${new Date(\n                      release.first_release_date * 1000\n                    ).toDateString()})`}\n                  </li>\n                );\n              })\n            ) : (\n              <p>No releases for the next 30 days</p>\n            )}\n          </ul>\n        }\n      </section>\n    );\n  }\n\n  render6Months() {\n    return (\n      <section>\n        <h2>Next 6 months</h2>\n        {\n          <ul>\n            {this.props.releases.releases6Months.isLoading6Months ? (\n              <p>Loading...</p>\n            ) : this.props.releases.releases6Months.releases6Months.length >\n              0 ? (\n              this.props.releases.releases6Months.releases6Months.map(game => {\n                return (\n                  <li key={game.id}>\n                    {`${game.name} (${new Date(\n                      game.first_release_date * 1000\n                    ).toDateString()})`}\n                  </li>\n                );\n              })\n            ) : (\n              <p>No releases for the next 6 months</p>\n            )}\n          </ul>\n        }\n      </section>\n    );\n  }\n\n  render1Year() {\n    return (\n      <section>\n        <h2>Next year</h2>\n        {\n          <ul>\n            {this.props.releases.releases1Year.isLoading1Year ? (\n              <p>Loading...</p>\n            ) : this.props.releases.releases1Year.releases1Year.length > 0 ? (\n              this.props.releases.releases1Year.releases1Year.map(release => {\n                return (\n                  <li key={release.id}>\n                    {`${release.name} (${new Date(\n                      release.first_release_date * 1000\n                    ).toDateString()})`}\n                  </li>\n                );\n              })\n            ) : (\n              <p>No releases for next year</p>\n            )}\n          </ul>\n        }\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport ReviewsService from './../../../services/reviews.service'\nimport ReviewTile from '../../../components/ReviewTile/ReviewTile'\nimport PlatformsTags from './../../../components/PlatformsTags/PlatformsTags'\n\nexport default class Reviews extends Component {\n  constructor(props) {\n    super(props)\n    this.reviewsService = new ReviewsService()\n    this.state = {\n      reviews: props.reviews,\n      platforms: props.platforms\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderNewReviewLink()}\n        {this.renderReviews()}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    // this.loadReviews(0, 10)\n  }  \n\n  async loadReviews(offset, limit) {\n    let reviews = await this.reviewsService.getReviews(offset, limit);\n    this.setState({\n      ...this.state,\n      reviews: reviews,\n      isLoadingReviews: false\n    });\n  }\n\n  renderNewReviewLink() {\n    return <Link to={\"/reviews/create\"}>Create review</Link>\n  }\n\n  renderReviews() {\n\n    const { platforms: {platforms} } = this.state;\n\n    return (\n      <section>\n        <h2>Reviews</h2>\n\n        <PlatformsTags platforms={platforms} type=\"radio\" />\n\n        <ul>\n          {this.state.reviews.reviewsFiltered.length > 0\n            ?\n              this.state.reviews.reviewsFiltered.map(review => {\n                return (\n                  <Link key={review._id} to={`/reviews/${review._id}`}>\n                    <ReviewTile gameTile={review} />\n                  </Link>\n                )\n              })\n            : null}\n        </ul>\n        {this.state.reviews.isLoadingReviews\n          ?\n            <p>Loading...</p>\n          :\n            <Link to={\"#\"} onClick={this.props.handleLoadMore}>Load more</Link>\n        }\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hasFocus: false\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"search\">\n        <form className=\"search-bar\" onSubmit={(e) => this.handleSearchSubmit(e)}>\n          <div className=\"field search-field\">\n            <input type=\"search\" autoComplete=\"off\" onChange={(e) => this.props.updateSearchText(e.target.value)} name=\"search\" id=\"search\" placeholder=\"Search games, reviews, users...\" onFocus={() => this.openSearchResults()} />\n            {this.state.hasFocus && <span onClick={(e) => this.closeSearchResults(e)}>Cancel</span>}\n          </div>\n        </form>\n        {this.state.hasFocus && this.renderSearchResults()}\n      </div>\n    )\n  }\n\n  handleSearchSubmit(e) {\n    e.preventDefault()\n    this.props.makeSearch()\n  }\n\n  renderSearchResults() {\n    return (\n      <div className=\"search-results\">\n        <h2>Results</h2>\n        {this.renderGamesResults()}\n        {this.renderReviewsResults()}\n        {this.renderUsersResults()}\n      </div>\n    )\n  }\n\n  openSearchResults() {\n    this.setState({\n      ...this.state,\n      hasFocus: true\n    })\n  }\n\n  closeSearchResults(e) {\n    this.setState({\n      ...this.state,\n      hasFocus: false\n    })\n  }\n\n  renderGamesResults() {\n    return (\n      <section className=\"results\">\n        <h3>Games</h3>\n        {\n          this.props.games.isSearchingGames\n            ? <p>Searching games...</p>\n            : this.props.games.gamesResults.length > 0\n              ? this.props.games.gamesResults.map((gameResult, idx) => {\n                  return <p key={idx}>{gameResult.name}</p>\n                })\n              : <p>No games</p>\n        }\n      </section>\n    )\n  }\n\n  renderReviewsResults() {\n    return (\n      <section className=\"results\">\n        <h3>Reviews</h3>\n        {\n          this.props.reviews.isSearchingReviews\n            ? <p>Searching reviews...</p>\n            : this.props.reviews.reviewsResults.length > 0\n              ? this.props.reviews.reviewsResults.map((reviewResult, idx) => {\n                return <p key={idx}>{reviewResult.title}</p>\n                })\n              : <p>No reviews</p>\n        }\n      </section>\n    )\n  }\n\n  renderUsersResults() {\n    return (\n      <section className=\"results\">\n        <h3>Users</h3>\n        {\n          this.props.users.isSearchingUsers\n            ? <p>Searching users...</p>\n            : this.props.users.usersResults.length > 0\n              ? this.props.users.usersResults.map((userResult, idx) => {\n                  return <p key={idx}>{userResult.username}</p>\n                })\n              : <p>No users</p>\n        }\n      </section>\n    )\n  }\n}\n","import axios from 'axios'\n\nexport default class SearchService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_SERVER_BASE_URL}/api/search`\n    })\n  }\n\n  makeGamesSearch = async (searchText) => {\n    let gamesSearchResults = await this.service.get(`/games?s=${searchText}`)\n    return gamesSearchResults.data\n  }\n\n  makeReviewsSearch = async (searchText) => {\n    let reviewsSearchResults = await this.service.get(`/reviews?s=${searchText}`)\n    return reviewsSearchResults.data\n  }\n\n  makeUsersSearch = async (searchText) => {\n    let usersSearchResults = await this.service.get(`/users?s=${searchText}`)\n    return usersSearchResults.data\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AuthService from \"./services/auth.service\";\nimport io from 'socket.io-client'\n\n// Pages\nimport Home from \"./pages/Public/Home/Home\";\nimport Login from \"./pages/Auth/Login/Login\";\nimport Signup from \"./pages/Auth/Signup/Signup\";\nimport AccountConfirm from \"./pages/Auth/AccountConfirm/AccountConfirm\";\nimport ForgotPassword from \"./pages/Auth/ForgotPassword/ForgotPassword\";\nimport ResetPassword from \"./pages/Auth/ResetPassword/ResetPassword\";\nimport Error404 from \"./pages/errors/Error404/Error404\";\nimport Profile from \"./pages/private/Profile/Profile\";\nimport LoggedInUserProfile from \"./pages/private/LoggedInUserProfile/LoggedInUserProfile\";\nimport Games from \"./pages/private/Games/Games\";\nimport Genres from \"./pages/private/Genres/Genres\";\nimport Platforms from \"./pages/private/Platforms/Platforms\";\nimport CreateReview from \"./pages/private/Reviews/CreateReview/CreateReview\";\nimport Game from \"./pages/private/Game/Game\";\nimport Review from \"./pages/private/Reviews/Review/Review\";\nimport Saved from \"./pages/private/Saved/Saved\";\nimport Room from \"./pages/private/Room/Room\";\n\n// Components\nimport Navbar from \"./components/Navbar/Navbar\";\nimport BestRated from \"./pages/private/BestRated/BestRated\";\nimport ComingSoon from \"./pages/private/ComingSoon/ComingSoon\";\nimport Reviews from \"./pages/private/Reviews/Reviews\";\n\n// Services\nimport ReviewsService from \"./services/reviews.service\";\nimport PlatformsService from \"./services/platforms.service\";\nimport GenresService from \"./services/genres.service\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport SearchService from \"./services/search.service\";\nimport GamesService from \"./services/games.service\";\nimport ProfileService from \"./services/profile.service\";\n\n// Styles\n// import \"./scss/main.scss\"\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.authService = new AuthService();\n    this.reviewsService = new ReviewsService()\n    this.platformsService = new PlatformsService()\n    this.genresService = new GenresService()\n    this.searchService = new SearchService()\n    this.gamesService = new GamesService()\n    this.profileService = new ProfileService()\n\n    this.socket = io(`${process.env.REACT_APP_SERVER_BASE_URL}`)\n\n    this.state = {\n      loggedInUser: null,\n      platforms: { isLoadingPlatforms: true, platforms: [], platformsFiltered: [], currentPlatform: null },\n      genres: { isLoadingGenres: true, genres: [], genresFiltered: [], currentGenre: null },\n      games: { isLoadingGames: true, games: [], gamesFiltered: [], currentGame: null },\n      bestRated: { isLoadingBestRated: true, bestRated: [] },\n      releases: {\n        releases7DaysAgo: { isLoading7DaysAgo: true, releases7DaysAgo: [] },\n        releases7Days: { isLoading7Days: true, releases7Days: [] },\n        releases14Days: { isLoading14Days: true, releases14Days: [] },\n        releases1Month: { isLoading1Month: true, releases1Month: [] },\n        releases6Months: { isLoading6Months: true, releases6Months: [] },\n        releases1Year: { isLoading1Year: true, releases1Year: [] }\n      },\n      reviews: { isLoadingReviews: true, reviews: [], reviewsFiltered: [], currentReviewFilter: null, pagination: { currentPage: 0, offset: 0, limit: 1 } },\n      search: {\n        games: { gamesResults: [], isSearchingGames: false },\n        reviews: { reviewsResults: [], isSearchingReviews: false },\n        users: { usersResults: [], isSearchingUsers: false },\n        searchText: \"\",\n        isSearching: false\n      }\n    };\n    this.fetchUser();\n  }\n\n  render() {\n    let routes = []\n    routes = [\n      { exact: true, path: \"/login\", component: () => <Login setUser={this.setUser} /> },\n      { exact: true, path: \"/signup\", component: () => <Signup setUser={this.setUser} /> },\n      { exact: true, path: \"/forgot-password\", component: ForgotPassword },\n      { exact: true, path: \"/reset-password/:resetPasswordToken\", component: ResetPassword },\n      { exact: true, path: \"/update-password/:resetPasswordToken\", component: ResetPassword },\n      { exact: true, path: \"/confirm/:confirmationToken\", component: AccountConfirm },\n      // TODO: 404\n      // { path: '*', component: Error404 }\n    ]\n    if (this.state.loggedInUser) {\n      routes = [\n        { exact: true, path: \"/\", component: Home },\n        {\n          exact: true,\n          path: \"/games\",\n          component: () => (\n            <Games\n              genres={this.state.genres}\n              platforms={this.state.platforms}\n              games={this.state.games}\n              onPlatformFilterChange={(platformsFilter) => this.handlePlatformFilterChange(platformsFilter)}\n              onGenreFilterChange={(genresFilter) => this.handleGenreFilterChange(genresFilter)}\n              onFilterApply={() => this.applyGameFilter()} \n              loggedInUser={this.state.loggedInUser}\n            />\n          ) },\n        { exact: true, path: \"/profile\", component: () => <LoggedInUserProfile loggedInUser={this.state.loggedInUser} /> },\n        { exact: true, path: \"/profile/:username\", render: (props) => <Profile {...props} loggedInUser={this.state.loggedInUser} /> },\n        { exact: true, path: \"/genres\", component: () => (<Genres genres={this.state.genres} loggedInUser={this.state.loggedInUser}/>) },\n        { exact: true, path: \"/games/best-rated\", component: () => <BestRated bestRated={this.state.bestRated} loggedInUser={this.state.loggedInUser} /> },\n        { exact: true, path: \"/games/coming-soon\", component: () => (<ComingSoon releases={this.state.releases} loggedInUser={this.state.loggedInUser}/>) },\n        { exact: true, path: \"/games/:gameID\", render: (props) => (<Game handleUnfollowRequest={(gameID) => this.handleUnfollowRequest(gameID)} handleFollowRequest={(gameID) => this.handleFollowRequest(gameID)} loggedInUser={this.state.loggedInUser} />) },\n        { exact: true, path: \"/reviews\", component: () => (<Reviews reviews={this.state.reviews} handleLoadMore={() => this.loadReviews()} platforms={this.state.platforms} loggedInUser={this.state.loggedInUser} />)},\n        { exact: true, path: \"/reviews/create\", component: () => (<CreateReview loggedInUser={this.state.loggedInUser} platforms={this.state.platforms.platforms} />)},\n        { exact: true, path: \"/reviews/:reviewID\", component: props => (<Review {...props} loggedInUserName={this.state.loggedInUser.username} loggedInUserID={this.state.loggedInUser._id} loggedInUser={this.state.loggedInUser} />)},\n        { exact: true, path: \"/saved\", component: props => (<Saved loggedInUser={this.state.loggedInUser} />)},\n        { exact: true, path: \"/platforms\", component: () => (<Platforms platforms={this.state.platforms} loggedInUser={this.state.loggedInUser} />) },\n        { exact: true, path: \"/room\", render: (props) => (<Room {...props} loggedInUser={this.state.loggedInUser} />) },\n        // TODO: 404\n        // { path: '*', component: Error404 }\n      ];\n    }\n    \n    return (\n      <div>\n        <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n        <SearchBar\n          makeSearch={() => this.makeSearch()}\n          games={this.state.search.games}\n          reviews={this.state.search.reviews}\n          users={this.state.search.users}\n          updateSearchText={text => this.updateSearchText(text)}\n          isSearching={this.state.search.isSearching}\n        />\n        <Switch>\n          {routes.map(route => (\n            <Route key={route.path} {...route} />\n          ))}\n        </Switch>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.loadPlatforms();\n    this.loadGenres();\n    this.loadReviews();\n    this.loadGames();\n    // this.loadBestRated();\n    // this.loadReleases(1, \"releases7DaysAgo\", \"desc\", \"isLoading7DaysAgo\");\n    // this.loadReleases(2, \"releases7Days\", \"asc\", \"isLoading7Days\");\n    // this.loadReleases(3, \"releases14Days\", \"asc\", \"isLoading14Days\");\n    // this.loadReleases(4, \"releases1Month\", \"asc\", \"isLoading1Month\");\n    // this.loadReleases(5, \"releases6Months\", \"asc\", \"isLoading6Months\");\n    // this.loadReleases(6, \"releases1Year\", \"asc\", \"isLoading1Year\");\n  }\n\n  handlePlatformFilterChange(platformsFilter) {\n    const { platforms } = this.state\n\n    this.setState({\n      platforms: {\n        ...platforms, \n        currentPlatform: platformsFilter\n      }\n    });\n  }\n\n  handleGenreFilterChange(genresSelected) {\n    const { genres } = this.state\n    this.setState({\n      genres: {\n        ...genres, \n        currentGenre: genresSelected\n      }\n    });\n  }\n\n  async applyGameFilter() {\n    const { currentGenre } = this.state.genres;\n    const { currentPlatform } = this.state.platforms;\n    \n    const gamesFiltered = await this.gamesService.getGamesPerPlatformAndGenre(10, 0, currentPlatform, currentGenre)    \n    const { games } = this.state;\n\n    this.setState({ \n      games: {\n        ...games,\n        games: gamesFiltered,\n      }\n    });\n    \n  }\n  async handleFollowRequest(gameID) {\n    let followRequest = await this.gamesService.follow(gameID, this.state.loggedInUser._id)\n    if (followRequest.gameFollowRequestDone) {\n      console.log(\"CREATEDEDEDE\", followRequest)\n      let updatedLoggedInUser = {...this.state.loggedInUser}\n      updatedLoggedInUser.savedGames = followRequest.follower.savedGames\n      this.setState({ ...this.state, loggedInUser: updatedLoggedInUser })\n    }\n  }\n\n  async handleUnfollowRequest(gameID) {\n    let unfollowRequest = await this.gamesService.unfollow(gameID, this.state.loggedInUser._id)\n    if (unfollowRequest.gameUnfollowRequestDone) {\n      console.log(\"asdasdasdasd\", unfollowRequest.follower)\n      let updatedLoggedInUser = {...this.state.loggedInUser}\n      updatedLoggedInUser.savedGames = unfollowRequest.follower.savedGames\n      this.setState({ ...this.state, loggedInUser: updatedLoggedInUser })\n    }\n  }\n\n\n  handleFollow(followers) {\n    let newLoggedInUser = {...this.state.loggedInUser}\n    newLoggedInUser.followers = followers\n    this.setState({ ...this.state, loggedInUser: newLoggedInUser })\n  }\n\n  async loadPlatforms() {\n    let platforms = await this.platformsService.platforms();\n    let newPlatforms = { ...this.state.platforms };\n    newPlatforms.isLoadingPlatforms = false;\n    newPlatforms.platforms = platforms;\n    newPlatforms.platformsFiltered = platforms;\n\n    this.setState({ ...this.state, platforms: newPlatforms });\n  }\n\n  async loadGenres() {\n    let genres = await this.genresService.getAllGenres();\n    let newGenres = { ...this.state.genres };\n    newGenres.isLoadingGenres = false;\n    newGenres.genres = genres.data;\n    newGenres.genresFiltered = genres.data;\n    this.setState({ ...this.state, genres: newGenres });\n  }\n\n  async loadReviews() {\n    let reviews = await this.reviewsService.getReviews(\n      this.state.reviews.pagination.offset,\n      this.state.reviews.pagination.limit\n    );\n    let newReviews = { ...this.state.reviews };\n    newReviews.isLoadingReviews = false;\n    newReviews.reviews = newReviews.reviews.concat(reviews);\n    newReviews.reviewsFiltered = newReviews.reviewsFiltered.concat(reviews);\n    newReviews.pagination.currentPage += 1;\n    newReviews.pagination.offset =\n      newReviews.pagination.limit * this.state.reviews.pagination.currentPage;\n    this.setState({ ...this.state, reviews: newReviews });\n  }\n\n  updateSearchText(text) {\n    let newSearch = { ...this.state.search };\n    newSearch.searchText = text;\n    this.setState({ ...this.state, search: newSearch });\n  }\n\n  async makeGamesSearch() {\n    let newSearch = { ...this.state.search };\n    newSearch.games.isSearchingGames = true;\n    this.setState({ ...this.state, search: newSearch });\n\n    let gamesResults = await this.searchService.makeGamesSearch(\n      this.state.search.searchText\n    );\n    newSearch.games.gamesResults = gamesResults;\n    newSearch.games.isSearchingGames = false;\n    this.setState({ ...this.state, search: newSearch });\n  }\n\n  async makeReviewsSearch() {\n    let newSearch = { ...this.state.search };\n    newSearch.reviews.isSearchingReviews = true;\n    this.setState({ ...this.state, search: newSearch });\n\n    let reviewsResults = await this.searchService.makeReviewsSearch(\n      this.state.search.searchText\n    );\n    newSearch.reviews.reviewsResults = reviewsResults;\n    newSearch.reviews.isSearchingReviews = false;\n    this.setState({ ...this.state, search: newSearch });\n  }\n\n  async makeUsersSearch() {\n    let newSearch = { ...this.state.search };\n    newSearch.users.isSearchingUsers = true;\n    this.setState({ ...this.state, search: newSearch });\n\n    let usersResults = await this.searchService.makeUsersSearch(\n      this.state.search.searchText\n    );\n    newSearch.users.usersResults = usersResults;\n    newSearch.users.isSearchingUsers = false;\n    this.setState({ ...this.state, search: newSearch });\n  }\n\n  async makeSearch() {\n    this.makeGamesSearch();\n    this.makeReviewsSearch();\n    this.makeUsersSearch();\n  }\n\n  async loadGames() {\n    const games = await this.gamesService.getGames(10, 0);\n\n    let newGames = { ...this.state };\n    newGames.isLoadingGames = false;\n    newGames.games = games.data;\n    newGames.gamesFiltered = games.data;\n\n    this.setState({ ...this.state, games: newGames });\n  }\n\n  async loadBestRated(order = \"desc\") {\n    const bestRated = await this.gamesService.getBestRated(20, 0, order)\n\n    let newState = { ...this.state };\n    newState.bestRated = bestRated.data;\n    this.setState(newState);\n  }\n\n  async loadReleases(period, statePeriod, order = \"asc\", isLoadingKey) {\n    let released = await this.gamesService.getReleases(20, 0, period, order);\n\n    let newState = { ...this.state.releases };\n    newState[statePeriod][statePeriod] = released.data;\n    newState[statePeriod][isLoadingKey] = false;\n    this.setState(newState);\n  }\n\n  fetchUser() {\n    return this.authService\n      .loggedin()\n      .then(response => {\n        this.setState({\n          ...this.state,\n          loggedInUser: response\n        });\n      })\n      .catch(error => {\n        this.setState({\n          ...this.state,\n          loggedInUser: false\n        });\n      });\n  }\n\n  setUser = userObj => {\n    this.setState({\n      ...this.state,\n      loggedInUser: userObj\n    });\n  };\n\n  // TODO: 404 Page not found showed on /logout. Investigate \"withRouter\"\n  logout = () => {\n    this.authService.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}