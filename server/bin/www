#!/usr/bin/env node

const http = require('http');
const socketIO = require("socket.io")
let app = require('../app');

app.use((req, res, next) => {
  res.status(404).json({error: 'not-found'});
});

app.use((err, req, res, next) => {
  // always log the error
  console.error('ERROR', req.method, req.path, err);

  if (!res.headersSent) {
    res.status(500).json({error: 'error'});
  }
});

let server = http.createServer(app);
const io = socketIO(server)

io.on('connection', (client) => {
  console.log('Someone connected to tiergames')
  console.log("THE CLIENT IS", client.id)

  client.on('greeting', (data) => {
    console.log("Someone says:", data)
  })
})

server.on('error', error => {
  if (error.syscall !== 'listen') { throw error }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(`Port ${process.env.PORT} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`Port ${process.env.PORT} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

server.listen(process.env.PORT, () => {
  console.log(`Listening on http://localhost:${process.env.PORT}`);
});
